(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{273:function(v,_,e){"use strict";e.r(_);var t=e(28),r=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"global-全局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#global-全局"}},[v._v("#")]),v._v(" Global(全局)")]),v._v(" "),e("h1",[v._v("全局(Global)名称空间")]),v._v(" "),e("p",[v._v('下面的函数和变量"存在"于全局名称空间，所以调用这些方法时无需指定任何名称空间指示器:')]),v._v(" "),e("pre",{pre:!0},[e("code",[v._v("var r = "),e("em",[v._v("eval")]),v._v("( "),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('" 348.0 / 23.7 "')]),v._v(" );"),e("br"),e("em",[v._v("stdout")]),v._v(".printf( "),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('"%f"')]),v._v(" , r );\nstdout"),v._v(".printf( "),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('"%f"')]),v._v(" , r );\n")],1)]),v._v(" "),e("p",[v._v("如果某个函数内存在与全局函数同名的函数时，如果想方法全局换上，可以给全局函数加上"),e("em",[v._v("self.ns.")]),v._v("前缀。")]),v._v(" "),e("dl",[e("h2",[v._v("全局变量")]),v._v(" "),e("h4",[v._v("这些流由脚本引擎的宿主应用程序来创建和管理。")]),v._v(" "),e("dt",[v._v("stdin")]),v._v(" "),e("dd",[e("em",[v._v("stream")]),v._v(", 标准输入流。只读。")]),v._v(" "),e("dt",[v._v("stdout")]),v._v(" "),e("dd",[e("em",[v._v("stream")]),v._v(", 标准输出流。只写。")]),v._v(" "),e("dt",[v._v("stderr")]),v._v(" "),e("dd",[e("em",[v._v("stream")]),v._v(", 标准错误流。引擎使用它来报告所有未捕捉的异常。")]),v._v(" "),e("h2",[v._v("全局函数")]),v._v(" "),e("dt",[v._v("eval")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("input")]),e("strong",[v._v(" : ")]),v._v("string|stream [, "),e("em",[v._v("namespace")]),v._v(" :object | "),e("i",[v._v("namespaces")]),v._v(": array of objects ]"),e("strong",[v._v(" ) ")]),v._v(": "),e("em",[v._v("value")])]),v._v(" "),e("p",[v._v("对"),e("em",[v._v("input")]),v._v("求值(解释执行)，并返回它的值。如果"),e("em",[v._v("input")]),v._v("是一个字符串，则该函数尝试将它作为脚本源代码进行解释执行。如果"),e("em",[v._v("input")]),v._v("是一个"),e("em",[v._v("流对象")]),v._v("，则它会从该流中编译和执行源代码。")]),v._v(" "),e("p",[v._v("示例: 在下面的语句执行后:")]),v._v(" "),e("pre",{pre:!0},[e("code",[v._v("var obj = eval( "),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('" ({ one:1, two:2 }) "')]),v._v(" );\n")],1)]),v._v(" "),e("p",[e("em",[v._v("obj")]),v._v("变量将会包含一个对象，它有两个字段: "),e("em",[v._v("one")]),v._v("和"),e("em",[v._v("two")]),v._v("。")]),v._v(" "),e("p",[e("em",[v._v("environment")]),v._v("是一个环境对象 - 如果该参数被提供，则脚本在该对象的名称空间中执行。")]),v._v(" "),e("pre",{pre:!0},[e("code",[v._v("var env = { one:1, two:2 };\nvar res = eval( "),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('"one + two", ')]),v._v("env);\n")],1)]),v._v(" "),e("div",[v._v("在上面两行代码执行后，"),e("em",[v._v("res")]),v._v("的值将为整数3。")]),v._v(" "),e("p",{staticClass:"note"},[v._v("要使用这些函数，需要宿主程序配置了引擎可以使用它们。")])]),v._v(" "),e("dt",[v._v("parseData")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("input")]),e("strong",[v._v(" : ")]),v._v("string|stream"),e("strong",[v._v(" ) ")]),v._v(": "),e("em",[v._v("value")])]),v._v(" "),e("p",[v._v("又名 JSON++ 数据解析器。")]),v._v(" "),e("p",[v._v("对"),e("em",[v._v("input")]),v._v("中的数据声明求值(解释执行)，并返回它的值。Input应该包含一个有效的数据声明表达式，否则解析时会抛出异常。 ")]),v._v(" "),e("p",[v._v("示例 1: 在下面的语句执行后:")]),v._v(" "),e("pre",{pre:!0},[e("code",[v._v("var obj = parseData( "),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('" { one:1, two:2 } "')]),v._v(" );\n")],1)]),v._v(" "),e("p",[e("em",[v._v("obj")]),v._v("变量将会包含一个对象，它有两个字段: "),e("em",[v._v("one")]),v._v("和"),e("em",[v._v("two")]),v._v("。")]),v._v(" "),e("div",[v._v("示例 2: 在下面的语句执行后:")]),v._v(" "),e("pre",{pre:!0},[e("code",[v._v("var v = parseData( "),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('"3.1415926"')]),v._v(" );\n")],1)]),v._v(" "),e("p",[e("em",[v._v("v")]),v._v("变量将会包含一个浮点数3.1415926 - 从字符串中解析的值。")]),v._v(" "),e("p",[e("em",[v._v("eval")]),v._v("函数和"),e("em",[v._v("parseData")]),v._v("主要的不同是:"),e("em",[v._v("parseData")]),v._v("不会执行任何函数声明或函数，所以当data的来源是未知代码时(如AJAX交互)，使用"),e("em",[v._v("parseData")]),v._v("是安全的。")])]),v._v(" "),e("dt",[v._v("emit")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("input")]),v._v(" :string|stream,"),e("strong"),e("em",[v._v("output ")]),v._v(":stream"),e("strong"),v._v("[, "),e("em",[v._v("env")]),v._v(" :object ] "),e("strong",[v._v(")")]),v._v(" :value")]),v._v(" "),e("p",[v._v("在serverScript模式(见下面)下对"),e("em",[v._v("input")]),v._v("流求值，并将结果放到"),e("em",[v._v("output")]),v._v("流。该函数假设"),e("em",[v._v("input")]),v._v("中的执行脚本包含在<% %>括号内。该函数在input流中的第一个"),e("em",[v._v("return")]),v._v("语句处返回结果。")]),v._v(" "),e("p",[e("em",[v._v("env")]),v._v("是一个环境对象, 它允许从调用者传递一些参数到输入脚本。")])]),v._v(" "),e("dt",[v._v("load")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("source")]),v._v(" [, "),e("em",[v._v("asServerScript")]),v._v("]"),e("strong",[v._v(" )")]),v._v(" :true|false")]),v._v(" "),e("p",[v._v("加载(编译和执行)"),e("em",[v._v("source")]),v._v("。Source这里可以是字符串("),e("strong",[v._v("文件名")]),v._v(")或"),e("strong",[v._v("流对象")]),v._v("。如果参数"),e("em",[v._v("asServerScript")]),v._v("被提供且为"),e("em",[v._v("true")]),v._v("，则source会被当做一个包含嵌入脚本(类似PHP或ASP网页)的文本进行解释:")]),v._v(" "),e("pre",{pre:!0},[e("code",[v._v("<html> ... <% =some_script_function(); %>... </html>")])]),v._v(" "),e("p",[v._v("这两段代码:")]),v._v(" "),e("pre",{pre:!0},[e("code",[e("strong",[v._v("load")]),v._v("( "),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('"c:/myscripts/test.tis"')]),v._v(" );")],1)]),v._v(" "),e("p",[v._v("和")]),v._v(" "),e("pre",{pre:!0},[e("code",[v._v("var s = Stream.openFile("),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('"c:/myscripts/test.tis"')]),v._v(","),e("font",{pre:!0,attrs:{color:"#990099"}},[v._v('"r"')]),v._v("); "),e("strong",[v._v("load")]),v._v("( s );\n")],1)]),v._v(" "),e("p",[v._v("是等价的。")]),v._v(" "),e("p",[v._v("该脚本执行取调用者所在的名称空间。")])]),v._v(" "),e("dt",[v._v("loadbc")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("source")]),v._v(" "),e("strong",[v._v(")")]),v._v(" : "),e("em",[v._v("true")]),v._v(" | "),e("em",[v._v("false")])]),v._v(" "),e("p",[v._v("加载"),e("em",[v._v("source")]),v._v("指定的编译后字节码。Source这里可以是字符串("),e("strong",[v._v("文件名")]),v._v(")或"),e("strong",[v._v("流对象")]),v._v("。")])]),v._v(" "),e("dt",[v._v("compile")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("input")]),v._v(" : filename | Stream, "),e("em",[v._v("output")]),v._v(": filename | Stream"),e("strong",[v._v(" [, ")]),e("em",[v._v("asServerScript")]),e("strong"),v._v(": true | false"),e("strong",[v._v(" ] ) ")]),v._v(": true | false")]),v._v(" "),e("p",[v._v("调用内建的编译器编译"),e("em",[v._v("input")]),v._v("，并将编译后的字节码写到"),e("em",[v._v("out")]),v._v("流或文件中。该字节码可以使用"),e("em",[v._v("loadbc")]),v._v("函数来加载(执行)。")])]),v._v(" "),e("dt",[v._v("store")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("filename")]),v._v(" | "),e("em",[v._v("stream")]),v._v(", "),e("em",[v._v("value")]),e("strong",[v._v(" ) ")]),v._v(":"),e("strong"),e("em",[v._v("true")]),v._v(" | "),e("em",[v._v("false")])]),v._v(" "),e("p",[v._v("将"),e("em",[v._v("value")]),v._v("以二进制格式存储到"),e("em",[v._v("filename")]),v._v("文件或"),e("em",[v._v("stream")]),v._v("流中。如果数据存储成功则返回"),e("em",[v._v("true")]),v._v("。")])]),v._v(" "),e("dt",[v._v("fetch")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("filename")]),v._v(" | "),e("em",[v._v("stream")]),e("strong",[v._v(" ) ")]),v._v(":"),e("strong"),v._v("value | null")]),v._v(" "),e("p",[v._v("将之前使用"),e("em",[v._v("store")]),v._v("函数存储的值重新写入到"),e("em",[v._v("filename")]),v._v("文件或"),e("em",[v._v("stream")]),v._v("流中。如果存储成功则返回该写入值，否则如果操作失败，则返回"),e("em",[v._v("null")]),v._v("。")])]),v._v(" "),e("dt",[v._v("hash")]),v._v(" "),e("dd",[e("p",[e("strong",[v._v("( ")]),e("em",[v._v("value")]),e("strong",[v._v(" ) ")]),v._v(": integer")]),v._v(" "),e("p",[v._v("返回"),e("em",[v._v("value")]),v._v("的哈希值。")])]),v._v(" "),e("dt",[v._v("membersOf")]),v._v(" "),e("dd",[e("p",[v._v("( obj: object | function ) : map (object)")]),v._v(" "),e("p",[v._v("返回一个映射表(一个简单对象)，它和obj有相同的属性集。"),e("em",[v._v("membersOf")]),v._v("函数的主要用于类似"),e("code",[v._v("for( var (k,v) in membersOf(obj))")]),v._v("枚举浏览实体(那些不同于对象实例的枚举)的属性。实例:")]),v._v(" "),e("pre",{pre:!0},[e("code",[v._v("function Foo() { ... }\nFoo.bar = 1; // 添加'bar'属性到Foo函数(函数也是一个对象)\nfor(var (k,v) in Foo )\n  ... // 某次迭代中，在这里你应该会看到k等于#bar "),e("br"),v._v("      \n")])])]),v._v(" "),e("dt",[v._v("rand")]),v._v(" "),e("dd",[e("p",[e("strong",[v._v("( ")]),e("em",[v._v("maxNumber")]),e("strong",[v._v(" )")]),v._v(" : integer")]),v._v(" "),e("p",[v._v("返回一个在0和maxNumber-1之间的随机数。")])]),v._v(" "),e("dt",[v._v("gc")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( )")]),v._v(" : "),e("em",[v._v("undefined")])]),v._v(" "),e("p",[v._v("调用垃圾回收器, 返回VM的堆内存总(total)尺寸、堆中自由区域(free)尺寸、脚本已使用(used)的尺寸。total = free + used; ")]),v._v(" "),e("p",[v._v("注意：VM向系统请求两次"),e("em",[v._v("total")]),v._v("字节数量。")])]),v._v(" "),e("dt",[v._v("crackUrl")]),v._v(" "),e("dd",[e("div",[e("strong",[v._v("( ")]),e("em",[v._v("url")]),v._v(":string"),e("strong",[v._v(" )")]),v._v(" : object")]),v._v(" "),e("p",[v._v("解析URL字符串，返回一个对象，该对象包含以下字段:")]),v._v(" "),e("ul",[e("li",[e("em",[v._v("port")]),v._v(" - integer, tcp/ip端口号;")]),v._v(" "),e("li",[e("em",[v._v("protocol")]),v._v(' - string, 协议，如"http", "file"等;')]),v._v(" "),e("li",[e("em",[v._v("hostname")]),v._v(" - string, 域名;")]),v._v(" "),e("li",[e("em",[v._v("anchor")]),v._v(" - string, 锚点;")]),v._v(" "),e("li",[e("em",[v._v("username")]),v._v(" - string, 用户名;")]),v._v(" "),e("li",[e("em",[v._v("password")]),v._v(" - string, 密码;")]),v._v(" "),e("li",[e("em",[v._v("params")]),v._v(" - string, http的GET请求参数;")]),v._v(" "),e("li",[e("em",[v._v("dir")]),v._v(" - string, 目录;")]),v._v(" "),e("li",[e("em",[v._v("name")]),v._v(" - string, 文件名(没有扩展名);")]),v._v(" "),e("li",[e("em",[v._v("ext")]),v._v(" - string, 扩展名;")]),v._v(" "),e("li",[e("em",[v._v("name_ext")]),v._v(" - string, 文件名(有扩展名)。")])])]),v._v(" "),e("dt",[v._v("symbol")]),v._v(" "),e("dd",[e("div",[v._v("( "),e("em",[v._v("string")]),v._v(" ) : symbol")]),v._v(" "),e("p",[v._v("该函数返回"),e("em",[v._v("string")]),v._v('的标识符。在内部，标识符是一个32位值，所以标识符空间是有限的-它对于"标识化"的任意字符串大小写是不敏感的。')])]),v._v(" "),e("dt",[v._v("color")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v("r")]),v._v(": int, "),e("strong",[v._v("g")]),v._v(": int, "),e("strong",[v._v("b")]),v._v(": int [, "),e("strong",[v._v("opacity")]),v._v(": int | float]) : color "),e("br"),v._v("( colorStr: string ) : color\n      "),e("p",[v._v("该函数根据red、green、blue和opacity分量或者colorStr颜色字符串(#RRGGB或CSS中的颜色名称)构造一个颜色值。")])]),v._v(" "),e("dt",[v._v("em")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": int | float ) : length, 这些函数根据对应类型构造一个长度值。")]),v._v(" "),e("dt",[v._v("pr")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": int | float ) : length")]),v._v(" "),e("dt",[v._v("px")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": int | float ) : length")]),v._v(" "),e("dt",[v._v("cm")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": int | float ) : length")]),v._v(" "),e("dt",[v._v("pt")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": int | float ) : length")]),v._v(" "),e("dt",[v._v("dip")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": int | float ) : length")]),v._v(" "),e("dt",[v._v("flex")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": int | float ) : length, 弹力单位值")]),v._v(" "),e("dt",[v._v("rad")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": float ) : angle, 根据一个弧度浮点值构造一个角度值。")]),v._v(" "),e("dt",[v._v("deg")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v(" v")]),v._v(": int | float ) : angle, 根据一个度数值构造一个角度值。")])]),v._v(" "),e("h2",[v._v("JSON namespace")]),v._v(" "),e("dl",[e("dt",[v._v("JSON.stringify")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v("value")]),v._v("[, "),e("strong",[v._v("replacer")]),v._v(": function | array][, "),e("strong",[v._v("space")]),v._v(":string | integer]) : string\n      "),e("p",[v._v("生成规范的JSON字符串表示形式。")]),v._v(" "),e("p",[v._v("如果"),e("em",[v._v("replacer")]),v._v("是一个"),e("code",[v._v("function (key, value) ")]),v._v("函数，则它会在每次迭代key / value时被调用。这个函数应该返回兼容JSON的值。如果"),e("em",[v._v("replacer")]),v._v("是一个数组, 则value对象中只有在数组中存在的键才会被JSON字符串化。value中成员的顺序与数组中指定的键的顺序一致。当value参数也是一个数组时，replacer数组将被忽略。")]),v._v(" "),e("p",[v._v("如果"),e("em",[v._v("space")]),v._v("是一个字符串，则输出的所有的\\t字符将被替换为这个字符串。如果它是一个数值，则所有\\t字符将被替换为该数值指定数量的空白符。")])]),v._v(" "),e("dt",[v._v("JSON.parse")]),v._v(" "),e("dd",[v._v("("),e("strong",[v._v("text")]),v._v(":string[, "),e("strong",[v._v("reviver")]),v._v("]) : value\n      "),e("p",[v._v("解析JSON字符串为一个JSON对象。"),e("em",[v._v("reviver")]),v._v("是一个"),e("code",[v._v("function (key, value): value")]),v._v("或"),e("code",[v._v("function (key, value): (key,value")]),v._v(")函数 - 该函数可以将被转换的键值替换为另一个值或key/value对。")])])]),v._v(" "),e("h2",[v._v("URL namespace")]),v._v(" "),e("p",[v._v("宜兴用于URL的函数:")]),v._v(" "),e("dl",[e("dt",[v._v("URL.parse")]),v._v(" "),e("dd",[v._v("("),e("b",[v._v("url")]),v._v(":string) : object\n      "),e("p",[v._v("该函数解析url，并返回一个URL分量组成的对象:")]),v._v(" "),e("ul",[e("li",[e("em",[v._v("port")]),v._v(" - integer, tcp/ip 端口号;")]),v._v(" "),e("li",[e("em",[v._v("protocol")]),v._v(' - string, 协议，比如"http", "file", 等;')]),v._v(" "),e("li",[e("em",[v._v("hostname")]),v._v(" - string, 域名;")]),v._v(" "),e("li",[e("em",[v._v("anchor")]),v._v(" - string, 锚点;")]),v._v(" "),e("li",[e("em",[v._v("username")]),v._v(" - string;")]),v._v(" "),e("li",[e("em",[v._v("password")]),v._v(" - string;")]),v._v(" "),e("li",[e("em",[v._v("params")]),v._v(" - string, http GET请求参数")]),v._v(" "),e("li",[e("em",[v._v("dir")]),v._v(" - string, 目录")]),v._v(" "),e("li",[e("em",[v._v("name")]),v._v(" - string, 文件名(无扩展名)")]),v._v(" "),e("li",[e("em",[v._v("ext")]),v._v(" - string, 扩展名")]),v._v(" "),e("li",[e("em",[v._v("name_ext")]),v._v(" - string, 文件名(有扩展名)")])])]),v._v(" "),e("dt",[v._v("URL.relative")]),v._v(" "),e("dd",[v._v("("),e("b",[v._v("url")]),v._v(": string, "),e("b",[v._v("baseUrl")]),v._v(":string) : string\n      "),e("p",[v._v("返回相对于"),e("i",[v._v("baseUrl")]),v._v("的"),e("i",[v._v("url")]),v._v("，比如，如果:")]),v._v(" "),e("ul",[e("li",[v._v("baseUrl:"),e("code",[v._v("http://example.com/foo/bar.htm")]),v._v("  and")]),v._v(" "),e("li",[v._v("url :"),e("code",[v._v("http://example.com/zar/laf.htm#location")])])]),v._v(" "),e("p",[v._v("这该函数返回"),e("code",[v._v("../zar/laf.htm#location")])])]),v._v(" "),e("dt",[v._v("URL.absolute")]),v._v(" "),e("dd",[v._v("( "),e("b",[v._v("relUrl")]),v._v(": string, "),e("b",[v._v("baseUrl")]),v._v(": string ) : string\n    "),e("p",[v._v("该函数拼接相对URL与基URL。")])]),v._v(" "),e("dt",[v._v("URL.encode")]),v._v(" "),e("dd",[v._v("( str: string ) : string\n    "),e("p",[v._v("该函数对所有非url字符进行编码, 比如空白字符将表示为"),e("code",[v._v("%20")]),v._v("。")])]),v._v(" "),e("dt",[v._v("URL.encodeParam")]),v._v(" "),e("dd",[v._v("( str: string ) : string\n    "),e("p",[v._v("该函数将编码所有字符，除了以下字符: 字母, 数字, "),e("code",[v._v("- _ . ! ~ * ' ( )")])])]),v._v(" "),e("dt",[v._v("URL.decode")]),v._v(" "),e("dd",[v._v("( str: string ) : string\n    "),e("p",[v._v("该函数对URL字符串进行解码。")])])]),e("p"),v._v(" "),e("dt",[v._v("URL.toPath")]),v._v(" "),e("dd",[v._v("( "),e("b",[v._v("fileUrl")]),v._v(": string ) : string\n    "),e("p",[v._v("该函数转换"),e("code",[v._v('"file://..."')]),v._v("字符串为文件路径 - 适用于目标平台的路径字符串。")])]),v._v(" "),e("dt",[v._v("URL.fromPath")]),v._v(" "),e("dd",[v._v("( "),e("b",[v._v("path")]),v._v(": string ) : string\n    "),e("p",[v._v("该函数将目标平台的路径字符串(如"),e("code",[v._v("C:\\User\\Desktop")]),v._v(")转换为文件URL (如"),e("code",[v._v("file://C:/User/Desktop")]),v._v(").")])]),e("p")])}),[],!1,null,null,null);_.default=r.exports}}]);