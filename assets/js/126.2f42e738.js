(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{265:function(e,v,_){"use strict";_.r(v);var t=_(28),o=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[e._v("#")]),e._v(" 类型")]),e._v(" "),_("h1",[e._v("值和数据类型")]),e._v(" "),_("p",[e._v("TIScript是动态类型语言。这意味着变量可以包含任何支持的类型的值。类型有：")]),e._v(" "),_("dl",[_("dt",[_("strong",[e._v("Integer")])]),e._v(" "),_("dd",[_("em",[e._v("Integer")]),e._v("类的值; 一个在Integer.MIN和Integer.MAX之间的32位(32-bit)有符号整数。如果你定义了 var i = 3;，则下面的语句将都等于"),_("em",[e._v("true")]),e._v(":  "),_("br"),_("code",[e._v("typeof i == #integer;")]),_("br"),_("code",[e._v("i instanceof Integer;")])]),e._v(" "),_("dt",[_("strong",[e._v("Float")])]),e._v(" "),_("dd",[_("em",[e._v("Float")]),e._v("类的值; 一个在"),_("em",[e._v("Float.MIN")]),e._v("和"),_("em",[e._v("Float.MAX")]),e._v("之间的63位(63-bit)的浮点数。下面的语句将都等于"),_("em",[e._v("true")]),e._v(":  "),_("br"),_("code",[e._v("typeof 3.14 == #float;")]),_("br"),_("code",[e._v("3.14 instanceof Float;")])]),e._v(" "),_("dt",[_("strong",[e._v("String")])]),e._v(" "),_("dd",[_("em",[e._v("String")]),e._v("类的值; 一个不可变的Unicode字符序列。下面的语句将都等于"),_("em",[e._v("true")]),e._v(":  "),_("br"),_("code",[e._v('typeof "abc" == #string;')]),_("br"),_("code",[e._v('"abc" instanceof String;')])]),e._v(" "),_("dt",[_("strong",[e._v("Symbol")])]),e._v(" "),_("dd",[_("em",[e._v("Symbol")]),e._v("类的值。"),_("em",[e._v("symbol")]),e._v("(otherwise known as atom)是一个关联了一个名称的唯一整数值，标识符在内部由一个32位(32-bit)整数表示。标识符被定义成一个以"),_("strong",[_("code",[e._v("#")])]),e._v("字符开头的名称标记(可以包含"),_("code",[e._v("-")]),e._v("字符)。下面是一些有效的标识符: "),_("code",[e._v("#integer")]),e._v("、 "),_("code",[e._v("#foo")]),e._v("、"),_("code",[e._v("#Bar")]),e._v("、"),_("code",[e._v("#sub-script")]),e._v("。下面是一些无效的标识符: #123, #1abc。标识符在编译时会转换成为一个整数值。因此比较两个标识符相当于比较两个整数值，这样的比较是有效的计算。在TIScript中, 标识符被用于作为对象属性的名称。因此，"),_("code",[e._v("obj.foo = 1;")]),e._v("表达式相当于"),_("code",[e._v("obj[#foo] = 1;")]),e._v("。下面的语句都将等于"),_("em",[e._v("true")]),e._v(": "),_("br"),_("code",[e._v("typeof #abc == #symbol;")]),_("br"),_("code",[e._v("#abc instanceof Symbol;")])]),e._v(" "),_("dt",[_("strong",[e._v("Array")])]),e._v(" "),_("dd",[_("em",[e._v("array")]),e._v("是一个元素-值的索引序列。数组中的元素可以使用[index]操作符来访问，其中"),_("em",[e._v("index")]),e._v("是一个整数值 - 该元素在数组中的序列号。数组中的索引从0起始。如果你定义了一个变量"),_("code",[e._v("var a = [1,2,3];")]),e._v(", 则下面的语句将等于"),_("em",[e._v("true")]),e._v(": "),_("br"),_("code",[e._v("typeof a == #array;")]),_("br"),_("code",[e._v("a instanceof Array;")]),_("br"),_("code",[e._v("a[0] == 1; a.length == 3;")])]),e._v(" "),_("dt",[_("strong",[e._v("Object")])]),e._v(" "),_("dd",[_("em",[e._v("Object")]),e._v('类的值; 一个"名称 值"的集合 - 名称(又名'),_("em",[e._v("键")]),e._v(")对和关联到这些名称上的值。在JavaScript中，对象是一个通用的实体。所以他们可以被作为 名称/值 对映射表(哈希映射表)，也可以作为真实的对象 - 用户定义类的实例。如果Obj变量被赋值了一个对象，则下面的语句都将为"),_("em",[e._v("true")]),e._v(":"),_("br"),_("code",[e._v("typeof obj == #object;")]),_("br"),_("code",[e._v("obj instanceof Object;")])]),e._v(" "),_("dt",[_("strong",[e._v("Function")])]),e._v(" "),_("dd",[_("em",[e._v("Function")]),e._v("类的值。函数时语言的一等实体。一旦定义，一个函数可以被赋值到任何变量，并且可以作为函数调用的参数。如果你有下面的语句:"),_("br"),_("code",[e._v("var foo = function(p) { return  p + 1; }")]),e._v(", 则下面的语句都将等于"),_("em",[e._v("true")]),e._v(":"),_("code",[_("br"),e._v("typeof foo == #function;")]),_("br"),_("code",[e._v("foo instanceof Function;")])]),e._v(" "),_("dt",[_("strong",[e._v("Class")])]),e._v(" "),_("dd",[_("em",[e._v("Class")]),e._v("类的值; 运行对象的类包含一个特有的方法和属性集合。 如果你有这样的声明:"),_("br"),_("code",[e._v("class MyClass { function myMethod() { ... } }")]),e._v(" "),_("br"),e._v("你可以使用"),_("em",[e._v("new")]),e._v("操作符来创建一个类的实例( "),_("code",[e._v("var obj = new MyClass()")]),e._v(" )。"),_("br"),e._v("下面的语句对于类都将等于"),_("em",[e._v("true")]),e._v(":"),_("br"),_("code",[e._v("typeof MyClass == #class;")])]),e._v(" "),_("dt",[_("strong",[e._v("Namespace")])]),e._v(" "),_("dd",[_("em",[e._v("名称空间")]),e._v("是一个对象(class类)，是一些变量、常量和方法放到一个命名的实体中。因此，如果你有这样的声明:"),_("br"),_("code",[e._v("namespace MyNamespace { const myConst = 12; function myMethod() { ... } }")]),_("br"),e._v("你可以使用下面的语句来访问名称空间中的成员: "),_("code",[e._v("MyNamespace.myMethod()")]),e._v(" 和 "),_("code",[e._v("MyNamespace.myConst")]),e._v("。")]),e._v(" "),_("dt",[_("strong",[e._v("Length")])]),e._v(" "),_("dd",[e._v("Length代表长度 - 包含单位名称的数字值。长度单位的声明是一个立即数跟着单位字符。例如"),_("code",[e._v("12px")]),e._v("代表一个表示12像素的值、"),_("code",[e._v("126mm ")]),e._v("是126毫米长度。参见Length类的说明。在内部，长度值是一个精确到0.001的固定点数值。下面的语句都将等于"),_("em",[e._v("true")]),e._v(":"),_("br"),_("code",[e._v("typeof 12.6cm == #length;")]),_("br"),_("code",[e._v("12.6cm instanceof Length;")]),_("br"),_("code",[e._v("12.6cm.units == #cm;")]),_("br"),_("code",[e._v("12.6cm == 126mm;")]),e._v(" "),_("p",[e._v("下面是支持的长度单位类型:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("em")]),e._v(", "),_("code",[e._v("ex")]),e._v(" - CSS长度单位：em和ex;")]),e._v(" "),_("li",[_("code",[e._v("px")]),e._v(" - 物理设备像素;")]),e._v(" "),_("li",[_("code",[e._v("dip")]),e._v(" - 设备独立像素，逻辑单位相当于1/96(每英尺96像素);")]),e._v(" "),_("li",[_("code",[e._v("mm")]),e._v(", "),_("code",[e._v("cm")]),e._v(" - 长度度量单位：毫米、厘米;")]),e._v(" "),_("li",[_("code",[e._v("in")]),e._v(", "),_("code",[e._v("pt")]),e._v(", "),_("code",[e._v("pc")]),e._v(" - 英国长度单位：英寸、点、皮卡(它们被用在CSS定义中);")]),e._v(" "),_("li",[_("code",[e._v("fx")]),e._v(" - 弹力单位 (Sciter特有的) - 定义剩余空间的部分: 在Sciter的CSS中，"),_("code",[e._v("1fx")]),e._v("等价于"),_("code",[e._v("1*")]),e._v("或者"),_("code",[e._v("100%%")]),e._v(";")]),e._v(" "),_("li",[_("code",[e._v("pr")]),e._v(" - 百分号单位, 在CSS中，"),_("code",[e._v("100pr")]),e._v("相当于"),_("code",[e._v("100%")]),e._v(";")])])]),e._v(" "),_("dt",[_("strong",[e._v("Angle")])]),e._v(" "),_("dd",[e._v("Angle值代表一个角度 -  包含单位名称的数字值。这些表达式都为true:"),_("br"),_("code",[e._v("360deg instanceof Angle;")]),_("br"),_("code",[e._v("360deg == Math.PI * 2 * 1rad;")]),_("br"),_("code",[e._v("360deg == 400grad;")]),_("br"),_("code",[e._v("360deg == 1turn;")]),_("br"),_("code",[e._v("1turn / 2 == 180deg;")]),e._v(" "),_("p",[e._v("TIScript支持CSS定义的所有角度单位:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("deg")]),e._v(" - 度, 在一个完整圆中有360度;")]),e._v(" "),_("li",[_("code",[e._v("rad")]),e._v(" - 弧度, 在一个完整圆中有2*π弧度;")]),e._v(" "),_("li",[_("code",[e._v("grad")]),e._v(" - 梯度(Gradians)。一个圆共400梯度。90deg = 100grad = 0.25turn ≈ 1.570796326794897rad;")]),e._v(" "),_("li",[_("code",[e._v("turn")]),e._v(" - 转、圈(Turns)。1圈等同于360度 - 一个完整的圆;")])])]),e._v(" "),_("dt",[_("strong",[e._v("Color")])]),e._v(" "),_("dd",[e._v("颜色("),_("em",[e._v("Color")]),e._v(")类的值。 颜色值代表 - 一个有红、绿、蓝和可选Alpha值的结构体。颜色值使用"),_("code",[e._v("color(red,green,blue[,opacity])")]),e._v("函数来创建。下面的语句都为"),_("em",[e._v("true")]),e._v(":"),_("br"),_("code",[e._v("typeof color(0xFF,0,0) == #color;")]),_("br"),_("code",[e._v("color(0xFF,0,0) instanceof Color;")]),_("br"),_("code",[e._v("color(0xFF,0,0).red == 0xFF; "),_("br"),e._v("color(0xFF,0,0).blue == 0;")])]),e._v(" "),_("dt",[_("strong",[e._v("Date")])]),e._v(" "),_("dd",[e._v("日期"),_("em",[e._v("Date")]),e._v("类的值。日期值代表日期和事件，使用"),_("em",[e._v("new")]),e._v("操作符来创建:"),_("br"),_("code",[e._v("var date = new Date(2009,7,15)")]),e._v("。"),_("br"),e._v("\n\t下面的语句为"),_("em",[e._v("true")]),e._v(":"),_("code",[_("br"),e._v("typeof date == #date;")]),_("br"),_("code",[e._v("date instanceof Date;")]),_("br"),_("code",[e._v("date.day == 15; date.year == 2009;")])]),e._v(" "),_("dt",[_("strong",[e._v("Bytes")])]),e._v(" "),_("dd",[e._v("字节"),_("em",[e._v("Bytes")]),e._v("类的值。一个Btyes类的实例是一个字节值(范围在0 .. 255的整数值)的数组(序列)。下面的语句为"),_("em",[e._v("true")]),e._v(":"),_("br"),_("code",[e._v("typeof (new Bytes(12)) == #Bytes;")]),_("br"),_("code",[e._v("(new Bytes(12)) instanceof Bytes;")]),_("br"),_("code",[e._v("(new Bytes(12)).length == 12;")])]),e._v(" "),_("dt",[_("strong",[e._v("Tuple")])]),e._v(" "),_("dd",[e._v("元组(精确到n元组(n-tuple))是一个值的标签序列。元组可以通过[]操作符访问元组中的元素。一旦元组被创建，它的长度将不能修改。元组有只读的"),_("em",[e._v("length")]),e._v("的属性和读写的"),_("em",[e._v("tag")]),e._v("属性。如果你有这样的定义: "),_("code",[_("br"),e._v('var tup = [tname: 1, "two" ];')]),e._v("则下面的语句等于"),_("em",[e._v("true")]),e._v(": "),_("code",[_("br"),e._v("typeof tup == #tuple;")]),_("br"),_("code",[e._v("tup instanceof Tuple;"),_("br"),e._v("tup.length == 2;"),_("br"),e._v('tup[0] == 1 && tup[1] == "two";')]),_("br"),_("code",[e._v("tup.tag == #tname;")])]),e._v(" "),_("dt",[_("strong",[e._v("Stream")])]),e._v(" "),_("dd",[_("em",[e._v("Stream")]),e._v("类的值。一个流表示一个称作流单位的元素序列(可能是无限的)。TIScript支持多种类型的流，它们可以通过"),_("code",[e._v("Stream.open****")]),e._v("方法来创建: "),_("br"),_("code",[e._v('var stream = Stream.openSocket("10.0.0.1:14");')]),_("br"),e._v("下面的语句都将为"),_("em",[e._v("true")]),e._v(":"),_("code",[_("br"),e._v("typeof stream == #Stream;"),_("br"),e._v("stream instanceof Stream;")])]),e._v(" "),_("dt",[_("strong",[e._v("正则表达式")])]),e._v(" "),_("dd",[e._v("RegExp类的值。一个RegExp对象是一个变异了的正则表达式。它被用于存储正则表达式模式匹配结果的信息。正则表达式可以通过RegExp类的构造函数来创建，或者通过正则表达声明:"),_("br"),_("code",[e._v("var re = /ain/i;                   // 正则表达式")]),_("br"),_("code",[e._v('r = "The rain in Spain".match(re); // 试图匹配搜索字符串')]),_("br"),_("code",[e._v('assert r == "ain";')])])])])}),[],!1,null,null,null);v.default=o.exports}}]);