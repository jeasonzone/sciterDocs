(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{356:function(e,l,t){"use strict";t.r(l);var a=t(28),s=Object(a.a)({},(function(){var e=this,l=e.$createElement,t=e._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"collapsed和expanded状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#collapsed和expanded状态"}},[e._v("#")]),e._v(" collapsed和expanded状态")]),e._v(" "),t("h1",{staticClass:"article-title"},[e._v("Sciter中的“collapsed”和“expanded”状态")]),e._v(" "),t("div",{staticClass:"article-content"},[t("p",[e._v("collapsed(折叠)/expanded(展开)概念在UI中使用的是非常广泛的， 所以我解决的将他们添加到Sciter的内核中。")]),e._v(" "),t("p",[e._v("所以在脚本中可以读写这两个通用的UI状态标识:")]),e._v(" "),t("pre",[t("code",[e._v("element.state.collapsed = true /*or false*/;\nelement.state.expanded = true /*or false*/;")])]),e._v(" "),t("p",[e._v("这两状态是相互关联的 – 元素可以是collapsed或expanded状态, 但不可能同时处于这两种状态，即当"),t("code",[e._v("element.state.expanded = true;")]),e._v("时，则"),t("code",[e._v("element.state.collapsed")]),e._v("将被设置为false, 反之亦然。默认情况下，元素的这两种状态都为false – 非collapsed也非expanded。")]),e._v(" "),t("p",[e._v("在CSS中，有两个伪类反应这两种状态:")]),e._v(" "),t("pre",[t("code",[e._v("element:collapsed { ... }\nelement:expanded { ... }")])]),e._v(" "),t("p",[e._v("在不同的场景中，collapsed和expanded状态表示不同的含义。在某些场景中，折叠的元素意味着元素是隐藏/不可见的，它的CSS定义如下:")]),e._v(" "),t("pre",[t("code",[e._v("element:collapsed { visibility:none; }")])]),e._v(" "),t("p",[e._v("而在另外一些场景中, 比如有标题区和内容区的section, 折叠状态意味着“隐藏内容区，但总是显示标题区”")]),e._v(" "),t("pre",[t("code",[e._v("<section.collapsible>\n <header>标题</header>\n <div>\n ... 内容 ...\n </div>\n</section>")])]),e._v(" "),t("p",[e._v("在这种场景中，CSS可能包含这样的visibility规则:")]),e._v(" "),t("pre",[t("code",[e._v("section.collapsible:collapsed > div { visibility:none; }")])]),e._v(" "),t("p",[e._v("所以当section处于折叠状态时，它的内容div是完全隐藏的。并且它可能在标题区定义了可见的折叠状态, 比如 +/-图标等。")]),e._v(" "),t("p",[e._v("在脚本中，你可以很容易触发它的expands/collapse的状态:")]),e._v(" "),t("pre",[t("code",[e._v('self.on("click", "section.collapsible > header", function(evt) {\n  // 在标题区上点击\n  var section = this.parent;\n  // 切换collapsed状态:\n  section.state.collapsed = !section.state.collapsed; \n});')])])])])}),[],!1,null,null,null);l.default=s.exports}}]);