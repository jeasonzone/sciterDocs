(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{301:function(v,n,_){"use strict";_.r(n);var e=_(28),a=Object(e.a)({},(function(){var v=this,n=v.$createElement,_=v._self._c||n;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"lang库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#lang库"}},[v._v("#")]),v._v(" Lang库")]),v._v(" "),_("h2",{attrs:{id:"多语言-lang-框架"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多语言-lang-框架"}},[v._v("#")]),v._v(" 多语言(Lang)框架")]),v._v(" "),_("p",[v._v("Lang框架是实现i18n自动识别UI的一种方式，这些UI可以以多种人类语言来展示。它提供了下面一些特性:")]),v._v(" "),_("ol",[_("li",[v._v("翻译静态文本和标签(label);")]),v._v(" "),_("li",[v._v("格式化动态值，包括多种数据和自定义规则;")]),v._v(" "),_("li",[v._v("对UI支持的语言可以一次翻译，多次展示;")]),v._v(" "),_("li",[v._v("将特定语言翻译定义到一个文件中，而不是分散在大量的代码、样式和html文件中。这样若要给UI添加新的语言翻译，只需要创建一个新的语言文件。")])]),v._v(" "),_("h2",[v._v("基本原则")]),v._v(" "),_("p",[v._v("应用程序的UI有一个或多个HTML文件组成，且这些文件对所有支持语言是相同的。")]),v._v(" "),_("p",[v._v("每种支持的语言需要有一个所谓的翻译映射文件TMF(translation map file).")]),v._v(" "),_("p",[v._v('TMF文件是一个tiscript脚本文件，它定义翻译项ID("translatable ID")和对应展示的人类语言的映射关系。')]),v._v(" "),_("h3",[v._v("TMF文件的结构")]),v._v(" "),_("p",[v._v("TMF是一个普通的脚本文件，区别是加载完成后会调用eval()函数进行求值。")]),v._v(" "),_("p",[v._v('TMF文件的求值结果将作为一个对象——一个翻译项ID("translatable ID")对应到另一个字符串或函数(提供翻译/复合字符串)的映射表。')]),v._v(" "),_("p",[v._v("下面是一个简单的中文的翻译映射文件:")]),v._v(" "),_("pre",[_("code",[v._v('({\n  "Matchboxes":"盒子",        // 静态文本入口\n  "There are # matches in the box" : // 简单的多态入口\n      function(n) { \n        return  n == 0 ? "该盒子是空的" \n              : n == 1 ? "该盒子中只有一个物品" \n              : String.printf("该盒子共有%d个物品",n);\n  },\n  ...\n}) \n')])]),v._v(" "),_("p",[v._v("正如你说看到的，这个映射文件就是一个从翻译项到给定语言的映射表。")]),v._v(" "),_("h2",[v._v("引入多语言框架")]),v._v(" "),_("p",[v._v("要引入多语言(Lang)框架，你只需在你的样式中包含sciter-sdk/+lang/目录中的lang.css文件。示例:")]),v._v(" "),_("pre",[_("code",[v._v("<style>\n   @import url(../lang.css);\n</style>\n")])]),v._v(" "),_("h3",[v._v("引入指定的翻译映射语言文件")]),v._v(" "),_("p",[v._v("要引入指定的翻译映射语言文件，只需在html文档的head部分引入特定的<link>元素:")]),v._v(" "),_("pre",[_("code",[v._v('<html lang="en">\n  <head>\n    \x3c!-- 这两个link定义了英语和俄语的翻译语言文件 --\x3e\n    <link href="lang/ru.tis" hreflang="ru" rel="translation" >\n    <link href="lang/en.tis" hreflang="en" rel="translation" >\n    ...\n')])]),v._v(" "),_("p",[v._v('加载时，Lang会将与<html lang="...">属性匹配的TMF文件加载进来。所以UI会将<html>标签的lang属性定义的语言作为默认的展示语言。')]),v._v(" "),_("h3",[v._v('在html中标记翻译"点"')]),v._v(" "),_("h4",[v._v("静态文本")]),v._v(" "),_("p",[v._v("若要在你的UI中定义可翻译的静态文本，可以采用下面的几种方式:")]),v._v(" "),_("ol",[_("li",[v._v("使用"),_("code",[v._v("<dfn>")]),v._v("元素, 示例: "),_("br"),v._v(" "),_("code",[v._v("<dfn>待翻译文本</dfn> ")]),_("br"),v._v("\n\t如果你的TMF文件中包含下面的入口: "),_("br"),v._v("  "),_("code",[v._v('"待翻译文本" : "翻译后的文本"')]),v._v(" "),_("br"),v._v('\n\t则用户将会看到"'),_("em",[v._v("翻译后的文本")]),v._v('"，而不是'),_("code",[v._v("<dfn>")]),v._v("元素中的原始内容;")]),v._v(" "),_("li",[v._v("使用"),_("code",[v._v("<label>")]),v._v("元素。Lang框架默认会将<label>元素当做<dfn>元素对待;")]),v._v(" "),_("li",[v._v("为任何元素的class属性包含"),_("code",[v._v("dfn")]),v._v("文本即可，如："),_("code",[v._v('<li class="dfn">待翻译文本</li>')]),v._v(";")]),v._v(" "),_("li",[v._v("使用CSS选择器为任何元素设置aspect为"),_("em",[v._v("Lang.Label")]),v._v(":"),_("br"),v._v(" "),_("code",[v._v('ul#options > li  { aspect:"Lang.Label"; }')])])]),v._v(" "),_("h4",[v._v("动态文本 - 多态文本(即需要根据某个变量动态变化的文本)")]),v._v(" "),_("p",[v._v('有一些场景是文本需要被格式化或复合成不同的表示文本。例如考虑下面这些情况: "1对应cactus" 但是"2对应cactii", "1对应match" 但是"2对应matches"等。 多态规则是一个非常特定语言化的，而且通常不能很好的生成正确的文本。所以Lang框架旨在提供一种最基础的解决多态文本的方式，而不是考虑覆盖所有语言可能的应用场景。')]),v._v(" "),_("p",[v._v("若要在你的UI中定义可翻译的动态文本，可以采用下面的几种方式:")]),v._v(" "),_("ol",[_("li",[v._v("使用"),_("code",[v._v("<var>")]),v._v("元素, 示例: "),_("br"),v._v(" "),_("code",[v._v("<var>There are # matches in the box</var>")]),v._v(". "),_("br"),v._v("The Lang框架为为"),_("code",[v._v("<var>")]),v._v("元素生成一个"),_("code",[v._v("value")]),v._v("属性。因此，当你在代码中将某些数字值设置到"),_("code",[v._v("<var>")]),v._v("元素上时，Lang框架将会调用映射表中对应的格式化函数来格式化"),_("code",[v._v("<var>")]),v._v("中的字符串。参考上面的翻译映射文件。 ")]),v._v(" "),_("li",[v._v("为任何元素的class属性包含"),_("code",[v._v("var")]),v._v("文本即可, 如："),_("code",[v._v('<li class="var">There are # matches in the box</li>')]),v._v(";")]),v._v(" "),_("li",[v._v("使用CSS选择器为任何元素设置aspect为"),_("em",[v._v("Lang.Formatter")]),v._v(":"),_("br"),v._v(" "),_("code",[v._v('ul#options > li  { aspect:"Lang.Formatter"; }')])])]),v._v(" "),_("h2",[v._v("翻译映射文件的自动生成和维护")]),v._v(" "),_("p",[v._v("为了使用Lang框架，我猜测你可能会做以下几个步骤:")]),v._v(" "),_("h4",[v._v("0. 创建一个初始的en.tis翻译文件，它有以下内容:")]),v._v(" "),_("pre",[_("code",[v._v("({ })\n")])]),v._v(" "),_("p",[v._v("保存该文件到/lang/en.tis。现在你有了一个控制翻译表。")]),v._v(" "),_("h4",[v._v("1. 使用你的默认语言定义你的UI。")]),v._v(" "),_("p",[v._v("现在让我假设它是英语，你的UI看起来可能如下面的样子:")]),v._v(" "),_("pre",[_("code",[v._v('<html lang="en">\n  <head>\n    <link href="lang/en.tis" hreflang="en" rel="translation" >\n    <style>\n      @import url(../lang.css); /* 启用Lang框架 */\n    </style>\n    <script type="text/tiscript">\n      include "../lang.tis";       // 加载Lang框架\n      include "../lang-tool.tis";  // 加载Lang框架工具库——翻译映射表生成器\n    <\/script>\n  </head>\n  <body>\n    <label>MATCHES</label> \n    <var id="nmatches">MATCHES-PLURALIZED</var></p> \n  </body>\n</html>\n')])]),v._v(" "),_("p",[v._v("注意声明代码中的"),_("code",[v._v('include "../lang-tool.tis";')]),v._v("。它包含了一个翻译映射表生成工具。 ")]),v._v(" "),_("h4",[v._v("2. 在你的程序中加载html标记语言，并且运行生成映射表工具")]),v._v(" "),_("p",[v._v("在加载完UI页面后，在你的应用程序中按下CTRL+SHIFT+F11，这时会调用翻译映射表生成器，他会将生成的映射表放到剪切板中。 "),_("br")]),v._v(" "),_("p",[v._v("将剪切板中的内容复制到某个文件中，如果是上面的空映射表和html代码，则你得到的内容应该如下:")]),v._v(" "),_("pre",[_("code",[v._v('// items not found:\n{\n "MATCHES-PLURALIZED":"function (v){ return \\"?\\" }",\n "MATCHES":"?"\n}\n// OK, no unused items\n')])]),v._v(" "),_("p",[v._v("第一节将会给出在你的最终映射表中需要被翻译和出现项的列表:")]),v._v(" "),_("pre",[_("code",[v._v('({ \n "MATCHES-PLURALIZED": function (v){ return ... },\n "MATCHES": "Matches"\n})\n')])]),v._v(" "),_("p",[v._v("你可以在你的app开发生命周期中重复上面的过程——有些项会被增加，而有些项会被移除(你将会在第二节看到它们)。在提交QA和测试之前建成这些项。")]),v._v(" "),_("p",[v._v("接着只需注释掉映射表生产工具的引用:  "),_("code",[v._v('// include "../lang-tool.tis";')]),v._v("这样它就不会占用任何空间和快捷键。 ")])])}),[],!1,null,null,null);n.default=a.exports}}]);