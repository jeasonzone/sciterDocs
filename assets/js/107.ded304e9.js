(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{270:function(v,_,t){"use strict";t.r(_);var e=t(28),r=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"string-字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[v._v("#")]),v._v(" String(字符串)")]),v._v(" "),t("dl",[t("h2",[v._v("属性")]),v._v(" "),t("dt",[v._v("length")]),v._v(" "),t("dd",[v._v("- "),t("em",[v._v("integer")]),v._v(", 只读属性。字符串中字符的数量。")]),v._v(" "),t("dt",[v._v("[index]")]),v._v(" "),t("dd",[v._v("- "),t("em",[v._v("integer")]),v._v(", 读写属性。字符串中在"),t("em",[v._v("index")]),v._v("位置的字符。索引基于0开始。")]),v._v(" "),t("dt",[v._v("[begin..end]")]),v._v(" "),t("dd",[v._v("- "),t("em",[v._v("integers")]),v._v(", begin和end索引基于0，表示一段范围。返回字符串中一个从"),t("em",[v._v("start")]),v._v("索引(包含)开始到"),t("em",[v._v("end")]),v._v("索引(不包含)结束的子字符串。"),t("em",[v._v("Begin")]),v._v("和"),t("em",[v._v("end")]),v._v("参数是可忽略的。如果begin被忽略，则会假设begin为0，如果end被忽略，则会假设end值为"),t("em",[v._v("length")]),v._v("。")])]),v._v(" "),t("h2",[v._v("迭代")]),v._v(" "),t("p",[t("code",[v._v("for (var "),t("i",[v._v("codepoint")]),v._v(" in str) {...}")])]),v._v(" "),t("p",[v._v(" 迭代字符串中所有UNICODE代码值。在内部，字符串被当做一个UTF16代码数组保存的，"),t("code",[v._v("str.length")]),v._v("报告这个数组的长度。在每次迭代中，"),t("i",[v._v("codepoint")]),v._v("遍历接收一个整数值 - UNICODE代码值。注意，如果字符串中包含代理对(两个UTF16代码值表示一个字符)，则迭代的次数可能小于"),t("code",[v._v("str.length")]),v._v("。")]),v._v(" "),t("p",[t("i",[t("code",[v._v("for (var (strpos,codepoint) in str) {...}")]),t("br")])]),v._v(" "),t("p",[v._v("上面的代码也报告代码值在字符串中的索引位置。")]),v._v(" "),t("dl",[t("h2",[v._v("方法")]),v._v(" "),t("dt",[v._v("new String")]),v._v(" "),t("dd",[v._v("("),t("b",[v._v("len")]),v._v(":integer [, "),t("b",[v._v("initCharCode")]),v._v(" = ' '])\n    "),t("p",[v._v("创建一个新的字符串，并且指定长度以及填充内容。")])]),v._v(" "),t("dt",[v._v("toInteger")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("([defaultValue[, radix:integer]])")]),v._v(" : integer | defaultValue | (undefined)")]),v._v(" "),t("p",[v._v("尝试对字符串的内容进行解析成整数。如果解析失败则返回defaultValue(如果提供的话)或undefined。"),t("br"),v._v("\n\t  toInteger期待字符串是以下格式:")]),v._v(" "),t("pre",{pre:!0},[t("code",[v._v("["),t("em",[v._v("空白符")]),v._v("] [{"),t("strong",[v._v("+")]),v._v(" | -}] ["),t("strong",[v._v("0")]),v._v(" [{ "),t("strong",[v._v("x")]),v._v(" | "),t("strong",[v._v("X")]),v._v(" }]] ["),t("em",[v._v("数字")]),v._v("]\n")])])]),v._v(" "),t("dt",[v._v("toFloat")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("([defaultValue])")]),v._v(" : В float | defaultValue | (undefined)")]),v._v(" "),t("p",[v._v("尝试对字符串的内容进行解析成浮点数。如果解析失败则返回defaultValue(如果提供的话)或undefined。"),t("br"),v._v("\n\t  toFloat期待字符串是以下格式::")]),v._v(" "),t("pre",{pre:!0},[t("code",[v._v("["),t("em",[v._v("空白符")]),v._v("] ["),t("em",[v._v("sign")]),v._v("] ["),t("em",[v._v("数字")]),v._v("] ["),t("strong",[v._v(".")]),t("em",[v._v("数字")]),v._v("] [ {"),t("strong",[v._v("d")]),v._v(" | "),t("strong",[v._v("D")]),v._v(" | "),t("strong",[v._v("e")]),v._v(" | "),t("strong",[v._v("E")]),v._v("}["),t("em",[v._v("sign")]),v._v("]"),t("em",[v._v("数字")]),v._v("]\n")])])]),v._v(" "),t("dt",[v._v("toNumber")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("([defaultValue])")]),v._v(" : integer | float | defaultValue | (undefined)")]),v._v(" "),t("p",[v._v("尝试对字符串的内容进行解析成整数或浮点数。它等价于:")]),v._v(" "),t("pre",{pre:!0},[t("code",[v._v("var n = s.toInteger( s.toFloat() );\n")])])]),v._v(" "),t("dt",[v._v("toString")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("返回字符串本身。")])]),v._v(" "),t("dt",[v._v("toHtmlString")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("返回根据html规则转义后的字符串。它是htmlEscape()方法的别名。")])]),v._v(" "),t("dt",[v._v("toUrlString")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("返回根据url规则转义后的字符串。它是urlEscape()方法的别名。")])]),v._v(" "),t("dt",[v._v("substring")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("(start [,end])")]),v._v(" : string | undefined")]),v._v(" "),t("p",[v._v(" start和end索引基于0，表示一段范围。返回字符串中一个从"),t("em",[v._v("start")]),v._v("索引(包含)开始到"),t("em",[v._v("end")]),v._v("索引(不包含)结束的子字符串。"),t("em",[v._v("Begin")]),v._v("和"),t("em",[v._v("end")]),v._v("参数是可忽略的。如果end被忽略，则会假设end值为"),t("em",[v._v("length")]),v._v("。")]),v._v(" "),t("p",[t("em",[v._v("start")]),v._v("或"),t("em",[v._v("end")]),v._v('的负值会被认为是"从右侧索引"，这样表达式 "Script".substring(0,-1) == "Script"是有效的。')])]),v._v(" "),t("dt",[v._v("substr")]),v._v(" "),t("dd",[t("div",[t("strong",[v._v("(start [,length])")]),v._v(" : string | undefined")]),v._v(" "),t("p",[t("em",[v._v("start")]),v._v("和"),t("em",[v._v("length ")]),v._v("是整数。"),t("em",[v._v("Start")]),v._v("基于0开始。length为字符数量。")]),v._v(" "),t("p",[t("em",[v._v("start")]),v._v('的负值被认为是"从右侧索引"，这样表达式"Script".substr(-6) == "Script"是有效的。')])]),v._v(" "),t("dt",[v._v("slice")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("(start [,end])")]),v._v(" : string | undefined")]),v._v(" "),t("p",[v._v("等价于"),t("em",[v._v("substring")]),v._v("方法。")])]),v._v(" "),t("dt",[v._v("splice")]),v._v(" "),t("dd",[t("div",[t("strong",[v._v("(index")]),v._v(": int"),t("strong",[v._v(", count")]),v._v(": int"),t("strong",[v._v(" [, string1, string2, ...] )")]),v._v(" returns: string")]),v._v(" "),t("p",[v._v("该方法:")]),v._v(" "),t("ol",[t("li",[v._v("从字符串的"),t("em",[v._v("index")]),v._v("位置移除"),t("em",[v._v("count")]),v._v("个字符;")]),v._v(" "),t("li",[v._v("从字符串的"),t("em",[v._v("index")]),v._v("位置开始插入string1, string2, ...;")]),v._v(" "),t("li",[v._v("返回新的字符串。")])])]),v._v(" "),t("dt",[v._v("concat")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("( [string1[, string2[, ... [, stringN]]] )")]),v._v(" : string")]),v._v(" "),t("p",[v._v("将参数中的字符串拼接到该字符串后，并返回新字符串: "),t("em",[v._v("self")]),v._v(" + "),t("em",[v._v("string1")]),v._v(" + "),t("em",[v._v("string2")]),v._v(" + "),t("em",[v._v("string3")]),v._v(" + ... + "),t("em",[v._v("stringN")]),v._v(".")])]),v._v(" "),t("dt",[v._v("charAt")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("( index )")]),v._v(" : string.")]),v._v(" "),t("p",[v._v("返回只有一个字符的字符串。等价于substr( index, 1 )。 如果"),t("em",[v._v("index")]),v._v("超出了字符串的边界，则返回空字符串。")])]),v._v(" "),t("dt",[v._v("charCodeAt")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("( index )")]),v._v(" : integer | undefined")]),v._v(" "),t("p",[v._v("返回字符串在"),t("em",[v._v("index")]),v._v("的unicode字符代码。")])]),v._v(" "),t("dt",[v._v("indexOf")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("( substring [,start] )")]),v._v(" : integer")]),v._v(" "),t("p",[v._v("在该字符串中搜索substring。返回substring第一次出现的索引。如果未找到则返回-1。")])]),v._v(" "),t("dt",[v._v("lastIndexOf")]),v._v(" "),t("dd",[t("div",[t("strong",[v._v("( substring [,start] )")]),v._v(" : integer")]),v._v(" "),t("p",[v._v("在该字符串中搜索substring。返回substring最后一次出现的索引。如果未找到则返回-1。")])]),v._v(" "),t("dt",[v._v("lexicalCompare")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("( what , ")]),v._v("["),t("strong",[v._v(" caseInsensitive:")]),v._v(" "),t("em",[v._v("true")]),v._v(" | "),t("em",[v._v("false")]),v._v(" ] "),t("strong",[v._v(")")]),v._v(" : integer")]),v._v(" "),t("p",[v._v("将该字符串与"),t("em",[v._v("what")]),v._v("字符串使用词典字符顺序进行比较。例如: "),t("code",[v._v('"ABC" < "abc"')]),v._v("将为true, 但是"),t("code",[v._v('"ABC".lexicalCompare("abc")')]),v._v(" 的值 >= 1。如果caseInsensitive被提供且为true，则该比较将是大小写不敏感的。默认比较是大小写敏感的。")])]),v._v(" "),t("dt",[v._v("distance")]),v._v(" "),t("dd",[v._v("( "),t("b",[v._v("other")]),v._v(": string ) : integer\n      "),t("p",[v._v("该函数返回当前字符串与other字符串之间的"),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Levenshtein_distance"}},[v._v("编辑距离")]),v._v("。该值为一个非负整数。")])]),v._v(" "),t("dt",[v._v("match")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("( regexp )")]),v._v(" : string | array of strings | null value")]),v._v(" "),t("div",[v._v("返回字符串中满足"),t("em",[v._v("regexp")]),v._v("正则表达式的字符串片段。")])]),v._v(" "),t("dt",[v._v("match")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("( string )")]),v._v(" ' RegExp ' object instance | null value")]),v._v(" "),t("div",[v._v("返回满足"),t("em",[v._v("字符串模式")]),v._v("的RegExp正则表达式对象。")])]),v._v(" "),t("dt",[v._v("replace")]),v._v(" "),t("dd",[t("p",[v._v("("),t("a",[v._v(" regexp")]),v._v(", "),t("a",[v._v("replaceBy: string | function")]),v._v(" ) : string")]),v._v(" "),t("p",[v._v("返回一个字符串的副本，该副本为所有满足regexp的的子字符串使用"),t("em",[v._v("replaceBy")]),v._v("替换。如果"),t("em",[v._v("replaceBy")]),v._v("是一个函数，则会为每个匹配子字符串调用该函数。这个函数参数分别对应整个字符串和匹配的子字符串。")]),v._v(" "),t("p",[v._v("示例:")]),v._v(" "),t("pre",{pre:!0},[t("code",[v._v('var s = "212F";\nvar test = /(\\d+(?:\\.\\d*)?)F\\b/g;\nfunction f2c(str, g1)\n{\n   return ((g1.toNumber() - 32) * 5/9) + "C";\n}\nstdout.printf("%V\\n", s.replace(test, f2c ));\n')])]),v._v(" "),t("p",[v._v("上面的代码将给定的字符串("),t("em",[v._v("s")]),v._v(")中的每个华氏度转换成摄氏度。")])]),v._v(" "),t("dt",[v._v("search")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("( regexp )")]),v._v(" : integer")]),v._v(" "),t("p",[v._v("返回字符串中满足regexp的第一个索引位置。如果未找到则返回-1。")])]),v._v(" "),t("dt",[v._v("split")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("("),t("a",[v._v("separator")]),v._v("[, "),t("a",[v._v("limit")]),v._v("])")]),v._v(" : array")]),v._v(" "),t("p",[v._v("将字符串根据"),t("em",[v._v("separator")]),v._v("进行分隔。"),t("em",[v._v("Separator")]),v._v("既可以是字符串也可以是regexp对象。返回一个字符串数组 - separator分隔的子字符串们。Limit是一个整数 - 返回的数组中元素的最大数量。")])]),v._v(" "),t("dt",[v._v("fromCharCode")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("(["),t("a",[v._v("code1")]),v._v("[, code2[, "),t("a",[v._v("...")]),v._v("[, "),t("a",[v._v("codeN")]),v._v("]]]])")]),v._v(" : string")]),v._v(" "),t("p",[v._v("静态方法。返回有给定的字符代码指定的字符组成的字符串。")])]),v._v(" "),t("dt",[v._v("toLowerCase")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("返回字符串的小写形式的副本。")])]),v._v(" "),t("dt",[v._v("toUpperCase")]),v._v(" "),t("dd",[t("div",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("返回字符串的大小形式的副本。")])]),v._v(" "),t("dt",[v._v("trim")]),v._v(" "),t("dd",[t("div",[t("strong",[v._v("( ")]),v._v("["),t("strong",[v._v("#left")]),v._v(" | "),t("strong",[v._v("#right")]),v._v("]"),t("strong",[v._v(" ) ")]),v._v(": string")]),v._v(" "),t("p",[v._v("返回移除左/右空白字符的字符串副本。")])]),v._v(" "),t("dt",[v._v("urlEscape")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("返回"),t("a",{attrs:{href:"http://pdos.csail.mit.edu/rover/RoverDoc/escape_url_table.html"}},[v._v("url转义")]),v._v("的该字符串副本(如果它包含需要转义的字符) 或 该字符串本身(如果没有这样的字符)。注意: 非ascii字符将会首先转换utf-8序列且结果代码将会被转义。")])]),v._v(" "),t("dt",[v._v("urlUnescape")]),v._v(" "),t("dd",[t("div",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("还原url转义转义后的字符串。")])]),v._v(" "),t("dt",[v._v("htmlEscape")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("返回一个字符串，其中每个"),t("font",{attrs:{size:"3"}},[v._v('< > & " ')]),v._v("or"),t("font",{attrs:{size:"3"}},[v._v(" '")]),v._v("字符都将替换为"),t("em",[v._v("&lt;")]),v._v(" "),t("em",[v._v("&gt;")]),v._v(" "),t("em",[v._v("&amp;")]),v._v(" "),t("em",[v._v("&quot;")]),v._v(" or "),t("em",[v._v("&apos;")]),v._v("。")],1)]),v._v(" "),t("dt",[v._v("htmlUnescape")]),v._v(" "),t("dd",[t("div",[t("strong",[v._v("()")]),v._v(" : string")]),v._v(" "),t("p",[v._v("返回一个字符串，其中"),t("a",{attrs:{href:"http://www.w3.org/TR/REC-html40/sgml/entities.html"}},[v._v("html实体")]),v._v("替换为对应的字符。")])]),v._v(" "),t("dt",[v._v("$")]),v._v(" "),t("dd",[t("p",[t("strong",[v._v("(")]),v._v(" ... "),t("strong",[v._v(")")]),v._v(" : string")]),v._v(" "),t("p",[v._v("静态方法, 返回一个组合字符串。注意：设置一个字符串器方法。")]),v._v(" "),t("p",[v._v("示例:")]),v._v(" "),t("pre",{pre:!0},[t("code",[v._v("var pt = { x:12, y:42  };\nvar msg = String.$(coordinates are x:{ pt.x } y:{ pt.y });\n")])]),v._v(" "),t("p",[v._v("上面的代码会在"),t("code",[v._v("msg")]),v._v("变量中生成"),t("code",[v._v('"coordinates are x:12 y:42"')]),v._v("。")])]),v._v(" "),t("dt",[t("a",{attrs:{name:"printf"}},[v._v("printf")])]),v._v(" "),t("dd",[t("p",[v._v("( format, ["),t("a",[v._v("value1")]),v._v("[, value2[, "),t("a",[v._v("...")]),v._v("[, "),t("a",[v._v("valueN")]),v._v("]]]]) : string")]),v._v(" "),t("p",[v._v("静态方法，返回使用"),t("a",{attrs:{href:"http://www.cplusplus.com/ref/cstdio/printf.html",target:"_blank"}},[v._v("sprintf C/C++ 函数")]),v._v("规则的格式化字符串。")]),v._v(" "),t("div",[v._v("另外添加的格式类型:")]),v._v(" "),t("ul",[t("p",[t("strong",[v._v("%v")]),v._v("和"),t("strong",[v._v("%V")]),v._v(' - 该格式接受任何类型的值作为参数，并且生成源代码格式以便接下来使用eval()方法。所以如果参数是一个数组则它会输出为"[element1, element2, element3... elementN]"，而如果它是一个对象(Object类的实例)则它会输出为"{key1:value1, key2:value2,..., keyN:valueN}"。 %v产生单行输出，而%V会尝试生成人易阅读的输出(包含换行和缩进)。'),t("br"),v._v("\n\t\t它使用在当你需要在AJAX/JSION中序列化对象时。")]),v._v(" "),t("p",[t("strong",[v._v("%S")]),v._v(" - 将对应的参数转换成字符串，并将其中的"),t("em",[v._v("HTML转义字符")]),v._v("进行转义。所以像'<'字符在输出中将会转换为\"&lt;\"。")])])]),v._v(" "),t("dt",[v._v("scanf")]),v._v(" "),t("dd",[t("div",[t("strong",[v._v("( ")]),t("em",[v._v("format")]),v._v(": string "),t("strong",[v._v(")")]),v._v(" : array")]),v._v(" "),t("p",[v._v("浏览字符串并查找满足"),t("a",{attrs:{href:"http://www.cplusplus.com/reference/clibrary/cstdio/scanf.html"}},[v._v("scanf C/C++ 函数")]),v._v("规则的值。该函数扩展了原有的通配符(类似%[a-z])。见"),t("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/xdb9w69d(VS.71).aspx"}},[v._v("scanf in MSDN")]),v._v("定义。")]),v._v(" "),t("p",[v._v("另外添加的格式类型:")]),v._v(" "),t("ul",[t("p",[t("strong",[v._v("%N")]),v._v(" - 浏览浮点或整数。")])]),v._v(" "),t("p",[v._v("该函数返回成功解析的值的数组。")])])])])}),[],!1,null,null,null);_.default=r.exports}}]);