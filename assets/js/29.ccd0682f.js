(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{263:function(_,v,e){"use strict";e.r(v);var d=e(28),t=Object(d.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"事件-event-对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件-event-对象"}},[_._v("#")]),_._v(" 事件(Event)对象")]),_._v(" "),e("p",[_._v("代表用户交互事件。事件和相对应的事件处理器定义在"),e("a",{attrs:{href:"Events.htm"}},[_._v("事件")]),_._v("中。")]),_._v(" "),e("dl",[e("h2",[_._v("常量")]),_._v(" "),e("h3",[_._v("事件组代码(用于Element.subscribe()方法)")]),_._v(" "),e("dt",[_._v("MOUSE")]),_._v(" "),e("dd",[_._v("鼠标事件组")]),_._v(" "),e("dt",[_._v("KEY")]),_._v(" "),e("dd",[_._v("键盘事件组")]),_._v(" "),e("dt",[_._v("FOCUS")]),_._v(" "),e("dd",[_._v("焦点事件组")]),_._v(" "),e("dt",[_._v("BEHAVIOR_EVENT")]),_._v(" "),e("dd",[_._v("被特定的行为生成(或组合成)的事件组，如(BUTTON_CLICK、EDIT_VALUE_CHANGING等)")]),_._v(" "),e("dt",[_._v("SCROLL")]),_._v(" "),e("dd",[_._v("滚动事件组")]),_._v(" "),e("dt",[_._v("SIZE")]),_._v(" "),e("dd",[_._v("尺寸事件组(目前只有一个事件：onSize)")]),_._v(" "),e("h3",[_._v("鼠标事件代码")]),_._v(" "),e("dt",[_._v("MOUSE_ENTER")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标进入元素。")]),_._v(" "),e("dt",[_._v("MOUSE_LEAVE")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标离开元素。")]),_._v(" "),e("dt",[_._v("MOUSE_MOVE")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标在元素上移动。")]),_._v(" "),e("dt",[_._v("MOUSE_DOWN")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标按钮在元素上按下。")]),_._v(" "),e("dt",[_._v("MOUSE_UP")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标按钮在元素上按起。")]),_._v(" "),e("dt",[_._v("MOUSE_CLICK")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标按钮在元素上单击。")]),_._v(" "),e("dt",[_._v("MOUSE_DCLICK")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标按钮在元素上双击。")]),_._v(" "),e("dt",[_._v("MOUSE_WHEEL")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标按钮在元素上滚动滚轮。")]),_._v(" "),e("dt",[_._v("MOUSE_TICK")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标在元素上按下或按起。")]),_._v(" "),e("dt",[_._v("MOUSE_IDLE")]),_._v(" "),e("dd",[_._v("事件的类型，鼠标脉冲事件。当鼠标在元素上右一段事件没有按下或移动时会发送该消息。默认的该事件触发气泡提示。")]),_._v(" "),e("dt",[_._v("MOUSE_DRAG_REQUEST")]),_._v(" "),e("dd",[_._v("鼠标按下并且移动超过某个阈值后触发这个事件。当在<input|text>和<textarea>中拖动选择内容时会处理这个事件，如果要取消这个默认处理 - 请实现这个事件并返回true。")]),_._v(" "),e("dt",[_._v("DROP")]),_._v(" "),e("dd",[_._v("事件的类型，拖拽动作中元素被放下，target为被放下的元素。")]),_._v(" "),e("dt",[_._v("DRAG_ENTER")]),_._v(" "),e("dd",[_._v("事件的类型，被拖拽元素到达某个目标(target)元素上，该目标元素是当前可接受拖拽项的目标之一。")]),_._v(" "),e("dt",[_._v("DRAG_LEAVE")]),_._v(" "),e("dd",[_._v("事件的类型，被拖拽元素离开某个目标(target)元素上，该目标元素是当前即将离开的可接受拖拽项的目标之一。")]),_._v(" "),e("dt",[_._v("DRAG_REQUEST")]),_._v(" "),e("dd",[_._v("事件的类型，在被拖拽元素开始拖拽之前发生的源通知事件。要取消拖拽请在事件处理器中返回true。")]),_._v(" "),e("h3",[_._v("键盘事件代码")]),_._v(" "),e("dt",[_._v("KEY_DOWN")]),_._v(" "),e("dd",[_._v("事件的类型，当元素或它的子元素聚焦时按下了键盘按键。")]),_._v(" "),e("dt",[_._v("KEY_UP")]),_._v(" "),e("dd",[_._v("事件的类型，当元素或它的子元素聚焦时按起了键盘按键。")]),_._v(" "),e("dt",[_._v("KEY_CHAR")]),_._v(" "),e("dd",[_._v("事件的类型，当元素或它的子元素聚焦时按下了某个字符。")]),_._v(" "),e("h3",[_._v("滚动事件代码")]),_._v(" "),e("dt",[_._v("SCROLL_HOME")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("SCROLL_END")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("SCROLL_STEP_PLUS")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("SCROLL_STEP_MINUS")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("SCROLL_PAGE_PLUS")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("SCROLL_PAGE_MINUS")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("SCROLL_POS")]),_._v(" "),e("dd"),_._v(" "),e("h3",[_._v("手势(触摸屏)事件代码")]),_._v(" "),e("dt",[_._v("GESTURE_REQUEST")]),_._v(" "),e("dd",[_._v('引擎发送该消息来请求元素制成的手势。通过对Event.flags字段使用"或"操作来设置。下面是支持的标志/手势类型:\n      '),e("ul",[e("li",[e("code",[_._v("Event.GESTURE_FLAG_ZOOM")]),_._v(" - 两手指缩放;")]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_FLAG_ROTATE")]),_._v(" - 两手指选择;")]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_FLAG_PAN_VERTICAL")]),_._v(" - 垂直滑动或平移;")]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_FLAG_PAN_HORIZONTAL")]),_._v("- 水平滑动或平移;")]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_FLAG_TAP1")]),_._v(" - 按住并点一下(Press and tap)手势;")]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_FLAG_TAP2")]),_._v(" - 两指点击(Two Finger tap);")]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_FLAG_PAN_WITH_GUTTER")]),_._v(" - PAN_VERTICAL and PAN_HORIZONTAL modifier - gutter.")]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_FLAG_PAN_WITH_INERTIA")]),_._v(" - PAN_VERTICAL and PAN_HORIZONTAL modifier - generate inertia events.")]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_FLAGS_ALL")]),_._v("  - 所有标志/事件")])])]),_._v(" "),e("dt",[_._v("GESTURE_ZOOM")]),_._v(" "),e("dd",[_._v("缩放手势。 "),e("code",[_._v("Event.deltaV")]),_._v("字段是一个浮点数，当放大时，它>1.0；当缩小是它<1.0。")]),_._v(" "),e("dt",[_._v("GESTURE_PAN")]),_._v(" "),e("dd",[_._v("滑动/平移手势. "),e("code",[_._v("Event.deltaX")]),_._v("和"),e("code",[_._v("Event.deltaY")]),_._v("字段是整数值 - 在X、Y方向上的像素数。")]),_._v(" "),e("dt",[_._v("GESTURE_ROTATE")]),_._v(" "),e("dd",[_._v("旋转手势。"),e("code",[_._v("Event.deltaV")]),_._v("字段是角度增量(弧度)。")]),_._v(" "),e("dt",[_._v("GESTURE_TAP1")]),_._v(" "),e("dd",[_._v("按住并点一下(Press and tap)手势。")]),_._v(" "),e("dt",[_._v("GESTURE_TAP2")]),_._v(" "),e("dd",[_._v("两指点击(Two Finger tap)手势。\n      "),e("p",[_._v("Event.flags字段在所有事件(除了GESTURE_REQUEST)总共是以下状态值的或操作集：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("Event.GESTURE_STATE_BEGIN")]),_._v(' - 在手势事件序列中第一个事件已经"on"。')]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_STATE_INERTIA")]),_._v(' - 被惯性处理器(inertia processor)合成的事件已经"on"。')]),_._v(" "),e("li",[e("code",[_._v("Event.GESTURE_STATE_END")]),_._v(' - 在手势事件序列中最后一个事件已经"on"')])])]),_._v(" "),e("h3",[_._v("焦点事件代码")]),_._v(" "),e("dt",[_._v("LOST_FOCUS")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("GOT_FOCUS")]),_._v(" "),e("dd"),_._v(" "),e("h3",[_._v("逻辑事件代码(来自于内建行为)")]),_._v(" "),e("dt",[_._v("BUTTON_CLICK")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("BUTTON_PRESS")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("BUTTON_STATE_CHANGED")]),_._v(" "),e("dd",[_._v("复选/单选框状态被改变。(并非所有的"),e("em",[_._v("BUTTON_CLICK")]),_._v("事件都会修改这个状态。)")]),_._v(" "),e("dt",[_._v("EDIT_VALUE_CHANGING")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("EDIT_VALUE_CHANGED")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("SELECT_SELECTION_CHANGED")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("SELECT_STATE_CHANGED")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("HYPERLINK_CLICK")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("ACTIVATE_CHILD")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("POPUP_REQUEST")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("POPUP_READY")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("POPUP_DISMISSED")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("POPUP_DISMISSING")]),_._v(" "),e("dd"),_._v(" "),e("dt",[_._v("MENU_ITEM_ACTIVE")]),_._v(" "),e("dd",[_._v("鼠标经过菜单项事件。Event.target为该菜单项，Event.owner为菜单的引发者。")]),_._v(" "),e("dt",[_._v("MENU_ITEM_CLICK")]),_._v(" "),e("dd",[_._v("单机菜单项事件。Event.target为该菜单项，Event.owner为菜单的引发者。")]),_._v(" "),e("dt",[_._v("CONTEXT_MENU_REQUEST")]),_._v(" "),e("dd",[_._v("当上下文菜单需要显示时引擎会触发该事件。"),e("code",[_._v("evt.target")]),_._v("是鼠标右键点击的顶层元素。"),e("code",[_._v("evt.source")]),_._v(" [读/写]是将要弹出的菜单元素。当处理该事件时你可以设置你自己的菜单元素到evt.source字段。")]),_._v(" "),e("dt",[_._v("CONTEXT_MENU_SETUP")]),_._v(" "),e("dd",[_._v("当上下文菜单找到时触发该事件。"),e("code",[_._v("evt.source")]),_._v("是该菜单元素，你可以修改它。")]),_._v(" "),e("dt",[_._v("VISUAL_STATUS_CHANGED")]),_._v(" "),e("dd",[_._v("当元素的可见性("),e("code",[_._v("display")]),_._v("/"),e("code",[_._v("visibility")]),_._v(" CSS属性)修改时触发该事件。该事件之后发送给该元素本身(不会进行冒泡)。")]),_._v(" "),e("dt",[_._v("DISABLED_STATUS_CHANGED")]),_._v(" "),e("dd",[_._v("当元素或者它的容器元素修改了它的禁用(disabled)状态是触发。")]),_._v(" "),e("dt",[_._v("TOOLTIP_REQUEST")]),_._v(" "),e("dd",[_._v("气泡提示的请求，该事件是在鼠标空闲(MOUSE_IDLE)期间触发的。"),e("em",[_._v("evt.source")]),_._v("中的元素是将要显示的气泡提示元素。你可以设置你自己的DOM元素到"),e("em",[_._v("evt.source")]),_._v("字段。若要取消其他提示，请设置"),e("em",[_._v("evt.source")]),_._v("为"),e("em",[_._v("null")]),_._v("，且事件处理函数返回"),e("em",[_._v("true")]),_._v("。")]),_._v(" "),e("dt",[_._v("DOCUMENT_COMPLETE")]),_._v(" "),e("dd",[_._v("当文档加载完成后触发——所有的外部资源加载完毕。"),e("em",[_._v("evt.target")]),_._v("为文档的根节点( "),e("code",[_._v("<html>")]),_._v(" )。注意：即使某些外部资源未获取到最终也会触发该事件。那些未获取到资源的元素会在状态标识位中设置"),e("code",[_._v(":incomplete")]),_._v("标识。")]),_._v(" "),e("dt",[_._v("FORM_SUBMIT")]),_._v(" "),e("dd",[_._v("behavior:form从表单中的type=submit按钮检查到提交事件。"),e("code",[_._v("evt.data")]),_._v("字段是一个映射表对象，为发送到服务端的数据。你可以修改数据或通过返回"),e("code",[_._v("true")]),_._v("(事件被处理了)来放弃提交。Y")]),_._v(" "),e("dt",[_._v("FORM_RESET")]),_._v(" "),e("dd",[_._v("behavior:form从表单中的type=reset按钮检查到提交事件。 "),e("code",[_._v("evt.data")]),_._v("字段为设置到输入字段中的数据。")]),_._v(" "),e("h3",[_._v("事件标志位")]),_._v(" "),e("dt",[_._v("SINKING")]),_._v(" "),e("dd",[e("div",[_._v("事件派发方向。如果该标识被设置，则事件是从父元素派发到子元素。示例:")]),_._v(" "),e("pre",{pre:!0},[e("code",[_._v("switch(evt.type)\n{\n   case Event.MOUSE_DOWN | Event.SINKING:\n        // 在所有子元素之前处理\n   case Event.MOUSE_DOWN:\n        // 若所有子元素都没有处理，则在这里处理\n}\n")])])]),_._v(" "),e("dt",[_._v("HANDLED")]),_._v(" "),e("dd",[e("div",[_._v("事件已被该元素的某些子元素或行为处理(事件处理函数返回"),e("em",[_._v("true")]),_._v(")。示例:")]),_._v(" "),e("pre",{pre:!0},[e("code",[_._v("switch(evt.type)\n{\n   case Event.MOUSE_DOWN:\n       // 在所有子元素之后，且它们都么有处理该事件。\n   case Event.MOUSE_DOWN | Event.HANDLED:\n       // 在所有子元素之后，且某些子元素处理了该事件。\n}\n")])])]),_._v(" "),e("h3",[_._v("拖动模式")]),_._v(" "),e("dt",[_._v("DRAGGING_MOVE"),e("br"),_._v(" DRAGGING_COPY")]),_._v(" "),e("dd",[_._v("下面的"),e("em",[_._v("draggingMode")]),_._v("属性的值。")]),_._v(" "),e("h3",[_._v("虚拟按键代码 - KEY_DOWN和KEY_UP事件中keyCode的值")]),_._v(" "),e("dd",[e("pre",{pre:!0},[e("code",[_._v("VK_CANCEL   VK_BACK     VK_TAB      VK_CLEAR    VK_RETURN   VK_SHIFT    VK_CONTROL\nVK_MENU     VK_PAUSE    VK_CAPITAL  VK_KANA     VK_HANGUL   VK_JUNJA    VK_FINAL\nVK_HANJA    VK_KANJI    VK_ESCAPE   VK_CONVERT  VK_SPACE    VK_PRIOR    VK_NEXT\nVK_END      VK_HOME     VK_LEFT     VK_UP       VK_RIGHT    VK_DOWN     VK_SELECT\nVK_PRINT    VK_EXECUTE  VK_SNAPSHOT VK_INSERT   VK_DELETE   VK_HELP     VK_SLEEP\nVK_NUMPAD0  VK_NUMPAD1  VK_NUMPAD2  VK_NUMPAD3  VK_NUMPAD4  VK_NUMPAD5  VK_NUMPAD6\nVK_NUMPAD7  VK_NUMPAD8  VK_NUMPAD9  VK_MULTIPLY VK_ADD      VK_SEPARATOR VK_SUBTRACT\nVK_DECIMAL  VK_DIVIDE   VK_F1       VK_F2       VK_F3       VK_F4       VK_F5\nVK_F6       VK_F7       VK_F8       VK_F9       VK_F10      VK_F11      VK_F12\nVK_F13      VK_F14      VK_F15      VK_F16      VK_F17      VK_F18      VK_F19\nVK_F20      VK_F21      VK_F22      VK_F23      VK_F24\n")])]),_._v(" "),e("p",[_._v("示例:")]),_._v(" "),e("pre",{pre:!0},[e("code",[_._v("switch(event.keyCode)\n{\n  case Event.VK_HOME: index = 0; break;\n  case Event.VK_END: index = this.length - 1; break;\n}\n")])])]),_._v(" "),e("h2",[_._v("属性")]),_._v(" "),e("dt",[_._v("type")]),_._v(" "),e("dd",[e("font",{attrs:{color:"#999999"}},[_._v("只读 - ")]),e("em",[_._v("Integer")]),_._v(",事件的类型，其值为上面定义的常量之一。")],1),_._v(" "),e("dt",[_._v("altKey")]),_._v(" "),e("dd",[e("font",{attrs:{color:"#999999"}},[_._v("只读 - ")]),e("em",[_._v("true/false")]),_._v(", 如果ALT键被按下则返回true。该字段对应鼠标、键盘事件有效。")],1),_._v(" "),e("dt",[_._v("ctrlKey")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("true/false")]),_._v(", 如果CTRL键被按下则返回true。该字段对应鼠标、键盘事件有效。")]),_._v(" "),e("dt",[_._v("shiftKey")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("true/false")]),_._v(", 如果SHIFT键被按下则返回true。该字段对应鼠标、键盘事件有效。")]),_._v(" "),e("dt",[_._v("shortcutKey")]),_._v(" "),e("dd",[_._v("r - "),e("em",[_._v("true/false")]),_._v(", 如果CTRL(Windows)或COMMAND (OSX)键被按下则返回true。该字段对应鼠标、键盘事件有效。如果你想以跨平台的方式处理键盘快捷命令时请使用使用这个属性。Windows系统中的CTRL+C 等同于OSX中的COMMAND+C。")]),_._v(" "),e("dt",[_._v("commandKey")]),_._v(" "),e("dd",[_._v("r - "),e("em",[_._v("true/false")]),_._v(", 如果Win(Windows)或COMMAND (OSX)键被按下则返回true。该字段对应鼠标、键盘事件有效。")]),_._v(" "),e("dt",[_._v("extendedKey")]),_._v(" "),e("dd",[_._v("r - "),e("em",[_._v("true/false")]),_._v(", 表示是否按下了扩展键, 比如101或102键盘中右边的ALT和CTRL键。")]),_._v(" "),e("dt",[_._v("mainButton")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("true/false")]),_._v(", 鼠标主按钮(通常是鼠标左键)是否按下。该字段对应鼠标事件有效。")]),_._v(" "),e("dt",[_._v("propButton")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("true/false")]),_._v(", 鼠标属性按钮(通常是鼠标右键)是否按下。")]),_._v(" "),e("dt",[_._v("buttons")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", 位标志，用于表示按下的鼠标按钮, 0x01 - 鼠标主(通常是左键)按钮, 0x02 - 鼠标右键, 0x04 - 鼠标中间按钮。")]),_._v(" "),e("dt",[_._v("target")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("Element")]),_._v(", 该事件的目标元素。")]),_._v(" "),e("dt",[_._v("reason")]),_._v(" "),e("dd",[_._v("读写 - "),e("em",[_._v("integer")]),_._v(", 控制事件代码的reason字段。")]),_._v(" "),e("dt",[_._v("keyCode")]),_._v(" "),e("dd",[_._v("读写 - integer, KEY_DOWN/KEY_UP事件的按键代码。KEY_CHAR事件的按下字符的代码点(codepoint)。")]),_._v(" "),e("dt",[_._v("group")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("symbol")]),_._v(", 事件组标识符，这里它是事件处理函数的标识符: #onMouse, #onKey, #onFocus等.")]),_._v(" "),e("dt",[_._v("wheelDelta")]),_._v(" "),e("dd",[_._v('只读 - integer, 鼠标滚轮"脉冲"事件 - 在onMouse/MOUSE_WHEEL事件中有效。值为-1或+1(取决于方向)。')]),_._v(" "),e("dt",[_._v("scrollPos")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", 在"),e("em",[_._v("SCROLL_POS")]),_._v("事件中的滚动位置。")]),_._v(" "),e("dt",[_._v("scrollAxis")]),_._v(" "),e("dd",[_._v("只读 - #vertical | #horizontal, 滚动条在滚动事件中的坐标轴。")]),_._v(" "),e("dt",[_._v("x")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", 鼠标事件中相对于元素本身(它的内容盒的原点)的x坐标。")]),_._v(" "),e("dt",[_._v("y")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", 鼠标事件中相对于元素本身(它的内容盒的原点)的y坐标。")]),_._v(" "),e("dt",[_._v("xRoot")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", 鼠标事件中相对于根元素(<html>)的x坐标。")]),_._v(" "),e("dt",[_._v("yRoot")]),_._v(" "),e("dd",[_._v("只读 -"),e("em",[_._v("integer")]),_._v(", 鼠标事件中相对于根元素(<html>)的y坐标。")]),_._v(" "),e("dt",[_._v("xView")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", 鼠标事件中相对于视图(窗口)的x坐标。")]),_._v(" "),e("dt",[_._v("yView")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", 鼠标事件中相对于视图(窗口)的y坐标。")]),_._v(" "),e("dt",[_._v("xScreen")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", 鼠标事件中相对于屏幕的x坐标。")]),_._v(" "),e("dt",[_._v("yScreen")]),_._v(" "),e("dd",[_._v("只读 -"),e("em",[_._v("integer")]),_._v(", 鼠标事件中相对于屏幕的y坐标。")]),_._v(" "),e("dt",[_._v("owner")]),_._v(" "),e("dd",[_._v("读写 - Element, MENU_ITEM_CLICK事件中该菜单的拥有者(引发者), 它也是Element.sendEvent方法的最后一个参数。")]),_._v(" "),e("dt",[_._v("isOnIcon")]),_._v(" "),e("dd",[_._v("只读 - true | false, 仅onMouse(evt)事件函数中有效。当鼠标在图标区域时返回true。元素的图标是指foreground、no-repeat的图像。")]),_._v(" "),e("dt",[_._v("dragging")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("Element")]),_._v(", "),e("em",[_._v("onMouse(evt)")]),_._v(" 和 "),e("em",[_._v("onExchange(evt)")]),_._v(" 事件函数有效。在onMouse()中是被拖动元素的引用。在onExchange()中是被拖动的数据。")]),_._v(" "),e("dt",[_._v("draggingMode")]),_._v(" "),e("dd",[_._v("只读 - "),e("em",[_._v("integer")]),_._v(", onMouse(evt)事件函数中有效。拖动模式 - Event.DRAGGING_MOVE或Event.DRAGGING_COPY——当前的拖动模式。")]),_._v(" "),e("dt",[_._v("draggingDataType")]),_._v(" "),e("dd",[_._v("只读 - symbol,  "),e("em",[_._v("onExchange(evt)")]),_._v("事件函数中有效。以下值之一:\n      "),e("ul",[e("li",[e("code",[_._v("#text")]),_._v(" - 纯文本")]),_._v(" "),e("li",[e("code",[_._v("#html")]),_._v(" - html")]),_._v(" "),e("li",[e("code",[_._v("#url")]),_._v(" - 超链接")]),_._v(" "),e("li",[e("code",[_._v("#file")]),_._v(" - 文件列表")]),_._v(" "),e("li",[e("code",[_._v("#json")]),_._v(" - JSON数据（符合sciter规范的JSON数据）")])])]),_._v(" "),e("dt",[_._v("deltaV, deltaX, deltaY, flags")]),_._v(" "),e("dd",[_._v("- onGesture()事件函数中的特有字段。将上面的GESTURE_****值的说明。")])]),_._v(" "),e("h2",[_._v("Methods")]),_._v(" "),e("dl",[e("dt",[_._v("match")]),_._v(" "),e("dd",[_._v("("),e("strong",[_._v("eventName")]),_._v(":string [,"),e("strong",[_._v("selector")]),_._v(":string]) : true | false\n      "),e("p",[_._v("当事件含有"),e("em",[_._v("eventName")]),_._v("事件名且它的目标元素匹配"),e("em",[_._v("selector")]),_._v("选择器。"),e("em",[_._v("eventName")]),_._v("可以接受"),e("a",{attrs:{href:"Event.htm#symbolic-event-names"}},[_._v("符号事件名称")]),_._v("：")])]),_._v(" "),e("dt",[_._v("exchangeData")]),_._v(" "),e("dd",[_._v("() : array of symbols.\n      "),e("p",[_._v("返回一个关联到exchange操作上的数据项类型的列表。这个列表是一个数组，它包含"),e("code",[_._v("#text")]),_._v(", "),e("code",[_._v("#html")]),_._v(", "),e("code",[_._v("#url")]),_._v(", "),e("code",[_._v("#file")]),_._v(", "),e("code",[_._v("#picture")]),_._v("或"),e("code",[_._v("#json")]),_._v("。")])]),_._v(" "),e("dt",[_._v("exchangeData")]),_._v(" "),e("dd",[_._v("("),e("strong",[_._v("dataType")]),_._v(":symbol) : value\n      "),e("p",[_._v("这个方法可以或安全到指定数据类型的数据:")]),_._v(" "),e("p",[e("code",[_._v("#text")]),_._v(" - 返回字符串 - 拖拽文本;")]),_._v(" "),e("p",[e("code",[_._v("#html")]),_._v(" - 返回(url,html)部分 - 被拖拽的HTML片段和HTML本身的url;")]),_._v(" "),e("p",[e("code",[_._v("#url")]),_._v(" -  返回(caption,url)部分 - 标题和url本身;")]),_._v(" "),e("p",[e("code",[_._v("#file")]),_._v(" - 返回文件名数组 - 被拖拽的文件路径列表;")]),_._v(" "),e("p",[e("code",[_._v("#picture")]),_._v(" - 如果拖拽数据中包含一个图像，则返回Image对象;")]),_._v(" "),e("p",[e("code",[_._v("#json")]),_._v(" - 返回一个值 - json值。")])])]),_._v(" "),e("h2",{attrs:{id:"symbolic-event-names"}},[_._v("符号事件名称")]),_._v(" "),e("p",[_._v("符号事件名称被"),e("code",[_._v('Element.subscribe("name", ...)')]),_._v("、"),e("code",[_._v('Element.on("name", ...)')]),_._v("、"),e("code",[_._v('Event.match("name", ...)')]),_._v("以及"),e("code",[_._v('event "name" (evt) {}')]),_._v("方法使用。")]),_._v(" "),e("dl",[e("dt",[_._v('"click"')]),_._v(" "),e("dd",[_._v("- 按钮和超链接点击;")]),_._v(" "),e("dt",[_._v('"dblclick"')]),_._v(" "),e("dd",[_._v("- 鼠标双击;")]),_._v(" "),e("dt",[_._v('"change"')]),_._v(" "),e("dd",[_._v("- value值被用户修改;")]),_._v(" "),e("dt",[_._v('"submit"')]),_._v(" "),e("dd",[_._v("- 在form表单数据提交前触发表单提交事件;")]),_._v(" "),e("dt",[_._v('"reset"')]),_._v(" "),e("dd",[_._v("- 在form表单数据被重置前触发表单重置事件;")]),_._v(" "),e("dt",[_._v('"expand"')]),_._v(" "),e("dd",[_._v("- 当各种Bheavior展开(expand)项时被触发(如树视图插件),event.target即为展开的元素; ")]),_._v(" "),e("dt",[_._v('"collapse"')]),_._v(" "),e("dd",[_._v("- 当各种Bheavior折叠(collapse)项时被触发(如树视图插件),event.target即为折叠的元素; ")]),_._v(" "),e("dt",[_._v('"statechange"')]),_._v(" "),e("dd",[_._v("- UI状态修改。例如，当光标或选择位置改变时，behavior:textarea和behavior:richtext行为会触发该UI事件;")]),_._v(" "),e("dt",[_._v('"contextmenu"')]),_._v(" "),e("dd",[_._v("- 上下文菜单请求(鼠标右击或属性按键点击);")]),_._v(" "),e("dt",[_._v('"animationstart"')]),_._v(" "),e("dd",[_._v("- 动画生命周期事件 - 通知元素上的动画将要开始;")]),_._v(" "),e("dt",[_._v('"animationend"')]),_._v(" "),e("dd",[_._v("- 动画生命周期事件 - 通知元素上的动画将要结束;")]),_._v(" "),e("dt",[_._v('"mediachange"')]),_._v(" "),e("dd",[_._v("- Event.MEDIA_CHANGED, mediachange在运行时检查到显示设置/参数发生改变时被触发。仅当前视图(view)的根文档可以接收这个事件;")]),_._v(" "),e("dt",[_._v('"contentchange"')]),_._v(" "),e("dd",[_._v("- Event.CONTENT_CHANGED, 当元素的内容发生改变(增加或移除)时接收到这个事件;")]),_._v(" "),e("dt",[_._v('"inputlangchange"')]),_._v(" "),e("dd",[_._v("- Event.INPUT_LANGUAGE_CHANGED, 当用户改变了输入语言时，当前的聚焦元素收到这个事件。event.data是一个字符串 - ISO语言国家代码。")]),_._v(" "),e("h4",[_._v("鼠标(Mouse)事件")]),_._v(" "),e("dt",[_._v('"mousedown"')]),_._v(" "),e("dd",[_._v("- Event.MOUSE_DOWN 事件; ")]),_._v(" "),e("dt",[_._v('"mouseup"')]),_._v(" "),e("dd",[_._v("- Event.MOUSE_UP 事件;")]),_._v(" "),e("dt",[_._v('"mousemove"')]),_._v(" "),e("dd",[_._v("- Event.MOUSE_MOVE 事件;")]),_._v(" "),e("dt",[_._v('"mouseenter"')]),_._v(" "),e("dd",[_._v("- Event.MOUSE_ENTER 事件,鼠标进入该元素内。")]),_._v(" "),e("dt",[_._v('"mouseleave"')]),_._v(" "),e("dd",[_._v("- Event.MOUSE_LEAVE 事件, 鼠标离开该元素。")]),_._v(" "),e("dt",[_._v('"mousedragrequest"')]),_._v(" "),e("dd",[_._v("- Event.MOUSE_DRAG_REQUEST 事件, 拖动操作(鼠标按下并且移动)被检查到时触发。")]),_._v(" "),e("h4",[_._v("焦点(Focus)事件")]),_._v(" "),e("dt",[_._v('"focusin"')]),_._v(" "),e("dd",[_._v("- Event.FOCUS_IN, 焦点进入事件，当元素或它内部的元素获取到焦点时触发该事件。如果焦点依然停留在容器元素内部，则容器元素不会接收到这个事件。")]),_._v(" "),e("dt",[_._v('"focusout"')]),_._v(" "),e("dd",[_._v("- Event.FOCUS_OUT, 焦点离开事件，当元素或它内部的元素失去到焦点时触发该事件。如果焦点依然停留在容器元素内部，则容器元素不会接收到这个事件。")]),_._v(" "),e("dt",[_._v('"focus" ')]),_._v(" "),e("dd",[_._v("- Event.GOT_FOCUS, 获得焦点事件，当元素获取焦点时触发该事件， Event.target是获取焦点的元素。")]),_._v(" "),e("dt",[_._v('"blur"')]),_._v(" "),e("dd",[_._v("- Event.LOST_FOCUS, 失去焦点事件，当元素失去焦点时触发该事件， Event.target是失去焦点的元素。")]),_._v(" "),e("h4",[_._v("键盘事件")]),_._v(" "),e("dt",[_._v('"keydown"')]),_._v(" "),e("dd",[_._v("- Event.KEY_DOWN, 键盘按下键事件，当有一个键被按下时触发。Event.keyCode是虚拟键代码 - Event.VK_****值之一。")]),_._v(" "),e("dt",[_._v('"keyup"')]),_._v(" "),e("dd",[_._v("- Event.KEY_UP, 键盘按起键事件，当一个按键松开时触发。Event.keyCode是虚拟键代码 - Event.VK_****值之一。")]),_._v(" "),e("dt",[_._v('"keypress"')]),_._v(" "),e("dd",[_._v("- Event.KEY_CHAR, 键盘按键事件，当鼠标接收到字符值时被触发。Event.keyCode是字符的UNICODE代码值。")]),_._v(" "),e("h4",[_._v("滚动事件")]),_._v(" "),e("dt",[_._v('"scroll"')]),_._v(" "),e("dd",[_._v("- 滚动事件;")]),_._v(" "),e("h4",[_._v("弹出和tooltip事件")]),_._v(" "),e("dt",[_._v('"popuprequest"')]),_._v(" "),e("dd",[_._v("- Event.POPUP_REQUEST, 当popup元素被创建的第一时间被触发, 这时弹出窗口尚未创建。event.source为弹出popup元素。可以使用这个事件来填充popup的内容。")]),_._v(" "),e("dt",[_._v('"popupready"')]),_._v(" "),e("dd",[_._v("- Event.POPUP_READY, 当popup元素创建的最后一阶段被触发, 这时弹出窗口已经被创建。 event.source 为弹出popup元素。")]),_._v(" "),e("dt",[_._v('"popupdismissed"')]),_._v(" "),e("dd",[_._v("- Event.POPUP_DISMISSED, 这个事件在弹出窗口从屏幕上移除后被触发。")]),_._v(" "),e("dt",[_._v('"tooltiprequest"')]),_._v(" "),e("dd",[_._v("- Event.TOOLTIP_REQUEST, 该事件用于响应Event.MOUSE_IDLE。")]),_._v(" "),e("h4",[_._v("文档生命周期事件")]),_._v(" "),e("dt",[_._v('"close"')]),_._v(" "),e("dd",[_._v("- Event.DOCUMENT_CLOSE, 这个事件在文档从它的容器(view或frame)中移除时被触发。仅文档元素和它的容器可以接收这个事件。")]),_._v(" "),e("dt",[_._v('"closerequest"')]),_._v(" "),e("dd",[_._v("- Event.DOCUMENT_CLOSE_REQUEST, 这个事件在请求文档从它的容器(view或frame)中移除时被触发，仅文档元素和它的容器可以接收这个事件。通过处理这个请求，应用程序可以通过是处理器中设置"),e("code",[_._v("event.cancel = true;")]),_._v(" 来取消窗口或文档的关闭。")]),_._v(" "),e("dt",[_._v('"ready"')]),_._v(" "),e("dd",[_._v("- Event.DOCUMENT_READY, 当文档被解析完毕并且它的DOM已经创建好时被触发。仅文档元素和它的容器可以接收这个事件。")]),_._v(" "),e("dt",[_._v('"complete"')]),_._v(" "),e("dd",[_._v("- Event.DOCUMENT_COMPLETE, 当文档下载完毕它请求的所有资源(图片、样式、脚本)之后被触发。仅文档元素和它的容器可以接收这个事件。")]),_._v(" "),e("h4",[_._v("Command命令事件")]),_._v(" "),e("dt",[_._v('"query:{command}"')]),_._v(" "),e("dd",[_._v('- 这个事件在查询准备执行{command}时被触发。比如当准备从剪切板粘贴到元素上时，"query:edit:paste"事件被发送给该元素以检查是否可以接收粘贴的内容。这个元素可以设置event.result字段来反馈是否支持这个command。Command在event.data字段中有一个额外的command参数。')]),_._v(" "),e("dt",[_._v('"exec:{command}"')]),_._v(" "),e("dd",[_._v('- 这个事件在执行{command}时被触发。比如当元素执行从剪切板粘贴命令时会触发"exec:edit:paste"事件。')]),_._v(" "),e("h4",[_._v("系统拖拽事件")]),_._v(" "),e("dt",[_._v("drag")]),_._v(" "),e("dd",[_._v("- 当被拖拽数据经过元素时被触发。")]),_._v(" "),e("dt",[_._v("dragenter")]),_._v(" "),e("dd",[_._v("-当数据被拖拽进入元素时被触发。")]),_._v(" "),e("dt",[_._v("dragleave")]),_._v(" "),e("dd",[_._v("-当数据被拖拽离开元素时被触发。")]),_._v(" "),e("dt",[_._v("drop")]),_._v(" "),e("dd",[_._v("- 当数据被拖拽到目标元素时被触发。")])]),_._v(" "),e("p",[_._v("任何其他字符串都会被认为是自定义事件, 要post/send这样的事件，需要使用"),e("code",[_._v("Element.postEvent")]),_._v("/"),e("code",[_._v("sendEvent(name,...)")]),_._v("方法。")])])}),[],!1,null,null,null);v.default=t.exports}}]);