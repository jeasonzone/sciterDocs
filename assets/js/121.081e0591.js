(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{287:function(e,r,t){"use strict";t.r(r);var n=t(28),i=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"对象匹配特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对象匹配特性"}},[e._v("#")]),e._v(" 对象匹配特性")]),e._v(" "),t("h2",{attrs:{id:"sciter-3-2-0-3新增的对象匹配特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sciter-3-2-0-3新增的对象匹配特性"}},[e._v("#")]),e._v(" Sciter 3.2.0.3新增的对象匹配特性")]),e._v(" "),t("p",[e._v("在Sciter 3.2.0.3中，我为内建的like操作符和switch/like语句添加了所谓的'对象匹配'特性。")]),e._v(" "),t("p",[e._v("设想我们有一个类似下面的对象/数据列表:\n"),t("pre",{pre:!0},[t("code",[e._v('var shoppingCartData = [\n{ product:"苹果", price: 0.95, calories:52 },\n{ product:"橘子", price: 0.75, calories:47 },\n{ product:"牙刷", price: 1.75 },\n"deleted",\n{ product:"Pear", price: 1.25, calories:57 },'),t("br"),e._v('\n{ product:"肥皂", price: 2.75 },\n];')])])]),e._v(" "),t("p",[e._v("我们要将其中的事务于其他物品分离开，若使用新的switch/like特性，语句如下:\n"),t("pre",{pre:!0},[t("code",[e._v("for( var item in shoppingCartData )\nswitch(item)\n{\nlike { price: Float, calories: Integer } :"),t("br"),e._v("\n// 一个食物项\n...\nbreak;\nlike { price: Float } :\n// 不是食物项\n...\nbreak;"),t("br"),e._v('\ncase "deleted" :\n// 被删除项，跳过它\nbreak;\ndefault:\n// 未知项，这是一个彩蛋?\nbreak;\n}')])])]),e._v(" "),t("p",[e._v("为like添加的模式匹配表达式:\n"),t("pre",{pre:!0},[t("code",[e._v('if( item like { product: String, price: Float } )\nstdout.println( item, "is a pricey product" );')])])]),e._v(" "),t("p",[e._v("希望这个新特性会为你们的工作带来便利。")])])}),[],!1,null,null,null);r.default=i.exports}}]);