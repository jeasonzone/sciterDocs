(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{330:function(e,c,v){"use strict";v.r(c);var _=v(28),s=Object(_.a)({},(function(){var e=this,c=e.$createElement,v=e._self._c||c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h2",{attrs:{id:"iaccessible和ui自动测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#iaccessible和ui自动测试"}},[e._v("#")]),e._v(" IAccessible和UI自动测试")]),e._v(" "),v("h1",[e._v("IAccessible和UI自动测试")]),e._v(" "),v("p",[e._v("Sciter3实现了与传统浏览器兼容的IAccessible接口，所以基于IAccessible的UI自动化工具对Sciter也是有效的。")]),e._v(" "),v("p",[e._v("为了简化UI测试脚本，进行了下面这些扩展:")]),e._v(" "),v("dl",[v("dt",[v("code",[e._v("HRESULT IAccessible::get_accChild(VARIANT varChild, IDispatch **ppdispChild);")])]),e._v(" "),v("dd",[v("i",[e._v("varChild")]),e._v("参数可以通过"),v("code",[e._v("VARIANT(VT_BSTR,str)")]),e._v("接受字符串。这个字符串被解释层一个选择器，如果找到了匹配的元素，则"),v("code",[e._v("ppdispChild")]),e._v("参数将返回该元素的IAccessible的封装对象。这个方法等价于脚本中的Element.select(selector)方法。")]),e._v(" "),v("dt",[v("code",[e._v("HRESULT IAccessible::get_accValue(VARIANT varChild, BSTR *pszValue);")])]),e._v(" "),v("dd",[e._v("如果"),v("code",[e._v("varChild")]),e._v("参数时一个负数值(VT_I4)，则它被解释成一个属性的索引，这个方法返回对应属性的值。-1-第一个属性、-2-第二个属性等等。如果"),v("code",[e._v("varChild")]),e._v("参数是一个字符串(VT_BSTR)，则它被解释成一个属性的名称，该方法返回对应属性的值。")]),e._v(" "),v("dt",[v("code",[e._v("HRESULT IAccessible::get_accName(VARIANT varChild, BSTR *pszValue);")])]),e._v(" "),v("dd",[e._v("如果"),v("code",[e._v("varChild")]),e._v("参数时一个负数值(VT_I4)，则它被解释成一个属性的索引，这个方法返回对应属性的名称。-1-第一个属性、-2-第二个属性等等。")]),e._v(" "),v("dt",[v("code",[e._v("HRESULT IAccessible::get_accState( VARIANT varChild, VARIANT *pvarState);")])]),e._v(" "),v("dd",[e._v("如果"),v("code",[e._v("varChild")]),e._v("参数时-1(VT_I4)，则该方法返回元素上定义的属性数量，值为"),v("code",[e._v("VARIANT(VT_I4,nAttributes)")]),e._v("。")])]),e._v(" "),v("p",[e._v("标准参数值和其他IAccessible方法如何工作请阅读定义的IAccessible文档。 ")]),e._v(" "),v("p")])}),[],!1,null,null,null);c.default=s.exports}}]);