(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{225:function(e,t,i){e.exports=i.p+"assets/img/yield-sign-640x425.9e358d7b.jpg"},289:function(e,t,i){"use strict";i.r(t);var r=i(28),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"generator与yield"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#generator与yield"}},[e._v("#")]),e._v(" Generator与yield")]),e._v(" "),r("div",{staticClass:"article-content"},[r("p",[r("img",{staticClass:"aligncenter size-medium",attrs:{src:i(225),alt:"yield-sign",width:"640",height:"425",sizes:"(max-width: 640px) 100vw, 640px"}})]),e._v(" "),r("p",[e._v("在Sciter中，任何函数体内包含"),r("code",[e._v("yield")]),e._v("关键字的函数都可以认为是一个生成器(generator)函数。")]),e._v(" "),r("p",[e._v("生成器的主要目标是产生一系列的值 – 每次调用生成器返回它的下一个值。"),r("br"),e._v(" \n      每当生成器执行到"),r("code",[e._v("yield <表达式>")]),e._v("时，生成器就返回下一个值。")]),e._v(" "),r("p",[e._v("考虑下面这个生成器函数:")]),e._v(" "),r("pre",{pre:!0},[r("code",[e._v(' function  ordinals() {\n   yield "first";\n   yield "second";\n   yield "third";\n}')])]),e._v(" "),r("p",[e._v("使用下面的代码来执行这个函数:")]),e._v(" "),r("pre",{pre:!0},[r("code",[e._v(" for(var ordinal in ordinals()) \n  stdout.println(ordinal);\n")])]),e._v(" "),r("p",[e._v("这个循环体将会被执行三次，并且在生成器的每次调用中，yield将依次返回它的值。"),r("br"),e._v(" \n      这时，你会看到下面的输出内容:")]),e._v(" "),r("pre",{pre:!0},[r("code",[e._v(" > first\n> second\n> third\n")])]),e._v(" "),r("p",[e._v("(生成器中的)"),r("code",[e._v("yield")]),e._v("和(异步任务中的)"),r("code",[e._v("await")]),e._v("同一种机制("),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Coroutine",target:"_blank"}},[e._v("协同式多线程")]),e._v(")的不同体现。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);