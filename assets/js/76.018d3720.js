(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{362:function(t,s,n){"use strict";n.r(s);var r=n(28),o=Object(r.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"tiscript的新特性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tiscript的新特性"}},[t._v("#")]),t._v(" TIScript的新特性")]),t._v(" "),n("div",{staticClass:"post",attrs:{id:"post-41756"}},[n("h1",{staticClass:"storytitle"},[t._v("Sciter 2.0.2.0 发布了TIScript的一些新特性")])]),t._v(" "),n("div",{staticClass:"storycontent"},[n("p",[t._v("2.0.2.0添加的特性之一是支持在类中声明成员变量。")]),t._v(" "),n("p",[t._v("ͨ通过使用this var name = value构造器，你可以定义成员(实例)变量:")]),t._v(" "),n("p",[t._v("这段代码:")]),t._v(" "),n("pre",{staticClass:"brush: js;"},[n("code",[t._v('class Foo {\n  this var one = 1, // 成员变量\n           two = 2; // 成员变量\n  function sum() { return this.one + this.two; }\n}\nvar foo = new Foo();\nstdout << foo.sum() << "\\n";')]),t._v("\n")]),t._v(" "),n("p",[t._v("即使该类没有定义构造器，上面这段代码也会输出‘3’。"),n("br"),t._v("\n每个Foo类的实例都会拥有this.one和this.two变量，并且拥有它们的初始值。")]),t._v(" "),n("p",[t._v("如果有其他类继承了这个Foo类，它也将拥有父类声明的成员变量。")]),t._v(" "),n("p",[t._v("这段代码:")]),t._v(" "),n("pre",{staticClass:"brush: js;"},[n("code",[t._v('class Bar: Foo {\n  this var three = 3; // 成员变量\n  function sum() { return this.three + super.sum(); }\n}\nvar bar = new Bar();\nstdout << bar.sum() << "\\n";')]),t._v("\n")]),t._v(" "),n("p",[t._v("将会输出‘6’。bar实例将会拥有this.one、this.two、this.three成员变量。")])])])}),[],!1,null,null,null);s.default=o.exports}}]);