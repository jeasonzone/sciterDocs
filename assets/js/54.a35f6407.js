(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{276:function(e,v,_){"use strict";_.r(v);var t=_(28),l=Object(t.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"csss-的dom对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#csss-的dom对象"}},[e._v("#")]),e._v(" CSSS!的DOM对象")]),e._v(" "),_("p",[e._v("$1()函数返回一个对象，这个对象表示一个DOM元素。DOM元素制成以下3种访问器:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("element.attribute")]),e._v(" - 访问DOM元素的属性。")]),e._v(" "),_("li",[_("code",[e._v("element:state-flag")]),e._v(" - 访问DOM元素的运行期标志: hover, active, focus等。")]),e._v(" "),_("li",[_("code",[e._v("element::style-attribute")]),e._v(" - 访问DOM元素的样式(CSS)属性。")])]),e._v(" "),_("p",[e._v("DOM元素"),_("code"),e._v("也有许多方法，这些方法通过下面的语句访问: "),_("code",[e._v("domobj.function-name()")]),e._v("。")]),e._v(" "),_("h2",[e._v("DOM元素属性")]),e._v(" "),_("p",[e._v("DOM元素可以设置或移除任何属性。")]),e._v(" "),_("p",[e._v("要移除一个元素的某个属性，只需设置这个属性值为"),_("code",[e._v("null")]),e._v(":")]),e._v(" "),_("pre",[_("code",[e._v('self.show = true; // 将会设置show属性的值为"true";\nself.show = null; // 将self元素的show属性移除。\n')])]),e._v(" "),_("h2",[e._v("DOM元素的状态值")]),e._v(" "),_("p",[e._v("元素有合成状态和纯状态。下面的代码在链接被点击时会为链接设置:visited状态。")]),e._v(" "),_("pre",[_("code",[e._v("a:link\n{\n  click!: self:visited = true;\n}\n")])]),e._v(" "),_("p",[e._v("合成状态字段:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v(":value")]),e._v(" - 代表DOM元素的值。对于输入(input)元素(被附加的对应行为处理的元素)，这个值对应value值；对于纯DOM元素，是这个元素的文本内容。")]),e._v(" "),_("li",[_("code",[e._v(":index")]),e._v(" - 是元素在父容器中的索引。Index 是范围为"),_("code",[e._v("1 .. parent().children()")]),e._v("间的一个整数值。")])]),e._v(" "),_("p",[e._v("纯状态字段都是boolean类型的。这些状态标志的名称和对应的CSS伪类相同:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v(":link")]),e._v(" - 任何用于href属性的元素")]),e._v(" "),_("li",[_("code",[e._v(":hover")]),e._v(" - 鼠标悬停处的元素")]),e._v(" "),_("li",[_("code",[e._v(":active")]),e._v(" - 被激活(按下)的元素")]),e._v(" "),_("li",[_("code",[e._v(":focus")]),e._v(" - 处于聚焦的元素")]),e._v(" "),_("li",[_("code",[e._v(":visited")]),e._v(" - 辅助标志 - 目前内部不使用")]),e._v(" "),_("li",[_("code",[e._v(":current")]),e._v(" - 容器中的当前项，如<select>中的当前的<option>")]),e._v(" "),_("li",[_("code",[e._v(":checked")]),e._v(" - 被勾选(选择)的元素，如复选框或多选列表")]),e._v(" "),_("li",[_("code",[e._v(":disabled")]),e._v(" - 被禁用的元素，行为相关标志")]),e._v(" "),_("li",[_("code",[e._v(":readonly")]),e._v(" - 只读元素，行为相关标志")]),e._v(" "),_("li",[_("code",[e._v(":expanded")]),e._v(" - 处于展开状态的元素 - 如树视图中的节点、选择列表中<options>")]),e._v(" "),_("li",[_("code",[e._v(":collapsed")]),e._v(" - 与:expanded状态相反")]),e._v(" "),_("li",[_("code",[e._v(":incomplete")]),e._v(" - 元素有图像(back/fore/bullet)请求，但是未交付")]),e._v(" "),_("li",[_("code",[e._v(":animating")]),e._v(" - 当做正处于动画中")]),e._v(" "),_("li",[_("code",[e._v(":focusable ")]),e._v("- 可接受焦点的元素")]),e._v(" "),_("li",[_("code",[e._v(":anchor")]),e._v(" - <select miltiple>中的第一个元素，:CURRENT是当前元素。")]),e._v(" "),_("li",[_("code",[e._v(":synthetic")]),e._v(" - 合成DOM元素 - 如表格中所有缺失的单元格(<td>)将会设置这个标志")]),e._v(" "),_("li",[_("code",[e._v(":owns-popup")]),e._v(" - 可见弹出框的锚点(拥有者)元素")]),e._v(" "),_("li",[_("code",[e._v(":tab-focus")]),e._v(" - 通过tab键获取焦点的元素。设置该标志的同时会设置:focus标志")]),e._v(" "),_("li",[_("code",[e._v(":empty")]),e._v(" - 元素是空的。")]),e._v(" "),_("li",[_("code",[e._v(":busy")]),e._v(" - 元素是忙的。如果元素使用HTMLayoutRequestElementData请求额外数据时会设置这个标志，当请求数据到达后会重置这个标志。")]),e._v(" "),_("li",[_("code",[e._v(":drag_over")]),e._v(" - 拖拽时经过的可以接受拖拽源的块元素(所以是当前拖拽目标)。这个标志设置给拖拽目标块。在任何时刻只会有一个这样的块元素。")]),e._v(" "),_("li",[_("code",[e._v(":drop-target")]),e._v(" - 当前拖拽目标元素，当D&D处于激活状态时，多个元素可以有这个状态标志。")]),e._v(" "),_("li",[_("code",[e._v(":moving")]),e._v(" - dragging/moving - 这个标志设置在正在移动的元素(拖拽源的副本)。")]),e._v(" "),_("li",[_("code",[e._v(":copying")]),e._v(" - dragging/copying - 这个标志设置在正在拷贝的元素(拖拽源的副本)。")]),e._v(" "),_("li",[_("code",[e._v(":drag-source")]),e._v(" - 被拖拽的元素")]),e._v(" "),_("li",[_("code",[e._v(":popup")]),e._v(" - 处于弹出状态的元素")]),e._v(" "),_("li",[_("code",[e._v(":pressed")]),e._v(" - 按下 - 于actvie状态相近，不过有更长的生命区间 - 在MOUSE_UP事件之前这个状态一直存在, 所以行为中可以在MOUSE_UP事件中检查这个状态来发现点击条件。")]),e._v(" "),_("li",[_("code",[e._v(":has-children")]),e._v("- 有一个活多个子元素")]),e._v(" "),_("li",[_("code",[e._v(":has-child")]),e._v(" - 只有一个子元素")]),e._v(" "),_("li",[_("code",[e._v(":ltr")]),e._v(' - 该元素或它的最近父容器有@dir，并且dir值为"ltr"。')]),e._v(" "),_("li",[_("code",[e._v(":rtl")]),e._v(' - 该元素或它的最近父容器有@dir，并且dir值为"rtl"。')])]),e._v(" "),_("h2",[e._v("DOM元素的样式属性")]),e._v(" "),_("p",[e._v("CSSS!允许设置所有支持的CSS属性值。支持的CSS属性列表可以在"),_("a",{attrs:{href:"http://www.terrainformatica.com/htmlayout/cssmap.whtm"}},[e._v("http://www.terrainformatica.com/htmlayout/cssmap.whtm")]),e._v("找到。")]),e._v(" "),_("p",[e._v("下面的样式规则使div元素在获得"),_("em",[e._v("fade-out")]),e._v("属性时显示fade-out特效:")]),e._v(" "),_("pre",[_("code",[e._v("div[fade-out]\n{\n  assigned!: self::opacity = 1.0, self.start-timer(50);\n  timer!: self::opacity < 1.0?\n          self::opacity = self::opacity + 0.1 # return cancel /* 停止计时器 */;\n}\n")])]),e._v(" "),_("h2",[e._v("DOM元素支持的函数(方法)")]),e._v(" "),_("p",[e._v("下面是CSSS!中为DOM元素定义的方法集合:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("element.parent()")]),e._v(" - DOM元素, 返回当前元素的父元素。")]),e._v(" "),_("li",[_("code",[e._v("element.children()")]),e._v(" - integer, 返回元素的子元素数量。")]),e._v(" "),_("li",[_("code",[e._v("element.child(n:integer)")]),e._v(" - DOM元素, 返回在"),_("em",[e._v("n")]),e._v("位置的子元素。"),_("em",[e._v("n")]),e._v("是一个范围在"),_("code",[e._v("1..children()")]),e._v("间的正数。")]),e._v(" "),_("li",[_("code",[e._v("element.next()")]),e._v(" - DOM元素, 返回当前元素的下一个兄弟元素。")]),e._v(" "),_("li",[_("code",[e._v("element.previous()")]),e._v(" - DOM元素, 返回当前元素的上一个兄弟元素。")]),e._v(" "),_("li",[e._v("选择器方法:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("element.$( selector )")]),e._v(" - r返回满足选择的元素集合。这个返回只会检索element的子元素。selector中的"),_("code",[e._v(":root")]),e._v("伪类匹配element元素。示例: "),_("code",[e._v("self.$(:root > li):expanded = true")]),e._v("将仅会为self的直接"),_("em",[e._v("li")]),e._v("子元素设置expanded状态。")]),e._v(" "),_("li",[_("code",[e._v("element.$1( selector )")]),e._v(" - 同上，区别是仅返回一个满足选择器的元素。")]),e._v(" "),_("li",[_("code",[e._v("element.$p( selector )")]),e._v(" - 返回匹配selector的element元素的父元素集。selector中的:root是全局的DOM根元素。")]),e._v(" "),_("li",[_("code",[e._v("element.$1p( selector )")]),e._v(" - 返回匹配selector的最近父元素。selector中的:root是全局的DOM根元素。")])]),e._v(" "),_("li",[_("code",[e._v("element.start-timer(period:integer)")]),e._v(" - 在element元素上启动一个时间间隔为period(毫秒)的计时器。这个计时器在period间隔后将会触发element元素的"),_("em",[e._v("timer!")]),e._v("事件。要停止计时器，可以调用"),_("em",[e._v("stop-timer()")]),e._v("函数或在"),_("code",[e._v("timer!")]),e._v("事件中"),_("code",[e._v("return cancel")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("element.stop-timer()")]),e._v(" - 停止先前使用"),_("code",[e._v("start-timer()")]),e._v("方法启动的计时器。")]),e._v(" "),_("li",[_("code",[e._v("element.scroll-to-view()")]),e._v(" - 确保element元素是可见的。")]),e._v(" "),_("li",[_("code",[e._v("element.box")]),e._v("-"),_("em",[e._v("type")]),e._v("-"),_("em",[e._v("what")]),e._v("() - 是一个方法集合，它们可以检测element的度量尺寸。示例:"),_("br"),e._v(" "),_("code",[e._v("self.box-border-width()")]),e._v("将会返回元素的边框盒的宽度(像素)。函数中的"),_("em",[e._v("type")]),e._v("部分可以是下面值之一:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("margin")]),e._v(" - 元素的外边距盒;")]),e._v(" "),_("li",[_("code",[e._v("border")]),e._v(" - 元素的内边框盒;")]),e._v(" "),_("li",[_("code",[e._v("padding")]),e._v(" - 元素的内边距盒;")]),e._v(" "),_("li",[_("code",[e._v("content")]),e._v(" - 元素的内容盒(内容轮廓盒);")]),e._v(" "),_("li",[_("code",[e._v("inner")]),e._v(" - 元素的内部盒;")]),e._v(" "),_("li",[_("code",[e._v("client")]),e._v(" - 元素的客户盒 - 元素的内部盒减去滚动条区域。如果没有滚动条则返回内部盒。")])]),e._v(" "),_("p",[_("em",[e._v("what")]),e._v("部分的名称可以是以下值之一:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("left")]),e._v(" - 盒的左边;")]),e._v(" "),_("li",[_("code",[e._v("right")]),e._v(" - 盒的右边;")]),e._v(" "),_("li",[_("code",[e._v("top")]),e._v(" - 盒的上边;")]),e._v(" "),_("li",[_("code",[e._v("bottom")]),e._v(" - 盒的下边;")]),e._v(" "),_("li",[_("code",[e._v("width")]),e._v(" - 盒的宽度;")]),e._v(" "),_("li",[_("code",[e._v("height")]),e._v(" - 盒的高度;")])]),e._v(" "),_("p",[e._v("这些名称组合起来共有30个"),_("code",[e._v("element.box-...-...()")]),e._v("函数。")]),e._v(" "),_("li",[_("code",[e._v("element.x-")]),_("em",[e._v("what")]),e._v("()是一个函数集合，它们检测element的相对x位置。"),_("br"),e._v("\n\t函数名中的"),_("em",[e._v("what")]),e._v("部分可以有以下值:")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("parent")]),e._v(" - 元素相对于它的父元素的水平位置值;")]),e._v(" "),_("li",[_("code",[e._v("root")]),e._v(" - 元素相对于根元素(<html>)的水平位置值;")]),e._v(" "),_("li",[_("code",[e._v("view")]),e._v(" - 元素相对于视图(窗口)的水平位置值;")]),e._v(" "),_("li",[_("code",[e._v("screen")]),e._v(" - 元素相对于屏幕的水平绝对位置值;")])]),e._v(" "),_("li",[_("code",[e._v("element.y-")]),_("em",[e._v("what")]),e._v("() 是一个函数集合，它们检测element的相对y位置。函数名中的"),_("em",[e._v("what")]),e._v("部分与上一个函数相同。")]),e._v(" "),_("li",[_("code",[e._v("element.start-animation([duration])")]),e._v(" - 启动animation-start!、animation-tick!、animation-end!事件中定义的动画。duration参数可以接受秒值: "),_("code",[e._v("self.start-animation(0.4s)")]),e._v(" - 将会启动持续400ms的动画。")]),e._v(" "),_("li",[_("code",[e._v('element.text-width("string")')]),e._v(" -返回当前样式下的element元素的string字符串的像素宽度。")]),e._v(" "),_("li",[_("code",[e._v("element.min-intrinsic-width()")]),e._v(", "),_("code",[e._v("element.max-intrinsic-width()")]),e._v(" - 元素的内在宽度。")]),e._v(" "),_("li",[_("code",[e._v("element.min-intrinsic-height()")]),e._v(", "),_("code",[e._v("element.max-intrinsic-height()")]),e._v(" - 元素的内在高度。")]),e._v(" "),_("li",[_("code",[e._v("element.refresh()")]),e._v(" - 该方法将会导致element的尺寸重新计算。如果"),_("code",[e._v("width")]),e._v("或"),_("code",[e._v("height")]),e._v("使用"),_("code",[e._v("calc()")]),e._v("修改后，需要调用这个方法。 ")])])])}),[],!1,null,null,null);v.default=l.exports}}]);